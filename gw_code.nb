(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    209855,       4151]
NotebookOptionsPosition[    208101,       4092]
NotebookOutlinePosition[    208439,       4107]
CellTagsIndexPosition[    208396,       4104]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"III", ".", " ", "continuous"}], " ", "gw"}], " ", "*)"}]], "Input",\

 CellChangeTimes->{{3.805364171883407*^9, 3.805364176372863*^9}, {
  3.805521280288411*^9, 3.805521295784594*^9}, {3.8062332943783493`*^9, 
  3.806233301594431*^9}, {3.810435601979765*^9, 3.810435609707509*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "3"}], ";", 
  RowBox[{"ep", "=", 
   RowBox[{"LeviCivitaTensor", "[", 
    RowBox[{"3", ",", "List"}], "]"}]}], ";", 
  RowBox[{"alcoord", "=", 
   RowBox[{"{", 
    RowBox[{"al", ",", "be", ",", "ga"}], "}"}]}], ";", 
  RowBox[{"alcoordd", "=", 
   RowBox[{"{", 
    RowBox[{"aldot", ",", "bedot", ",", "gadot"}], "}"}]}], ";", 
  RowBox[{"phcoord", "=", 
   RowBox[{"{", 
    RowBox[{"phx", ",", "phy", ",", "phz"}], "}"}]}], ";", 
  RowBox[{"phcoordd", "=", 
   RowBox[{"{", 
    RowBox[{"phxdot", ",", "phydot", ",", "phzdot"}], "}"}]}], ";", 
  RowBox[{"phpcoord", "=", 
   RowBox[{"{", 
    RowBox[{"phpx", ",", "phpy", ",", "phpz"}], "}"}]}], ";", 
  RowBox[{"phpcoordd", "=", 
   RowBox[{"{", 
    RowBox[{"phpxdot", ",", "phpydot", ",", "phpzdot"}], "}"}]}], ";", 
  RowBox[{"gap", "=", 
   RowBox[{"{", 
    RowBox[{"gapx", ",", "gapy", ",", "gapz"}], "}"}]}], ";", 
  RowBox[{"reuler", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "al", "]"}], " ", 
         RowBox[{"Cos", "[", "ga", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "be", "]"}], " ", 
         RowBox[{"Sin", "[", "al", "]"}], " ", 
         RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "ga", "]"}], " ", 
         RowBox[{"Sin", "[", "al", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Cos", "[", "al", "]"}], " ", 
         RowBox[{"Cos", "[", "be", "]"}], " ", 
         RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Sin", "[", "be", "]"}], " ", 
        RowBox[{"Sin", "[", "ga", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Cos", "[", "be", "]"}]}], " ", 
         RowBox[{"Cos", "[", "ga", "]"}], " ", 
         RowBox[{"Sin", "[", "al", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Cos", "[", "al", "]"}], " ", 
         RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "al", "]"}], " ", 
         RowBox[{"Cos", "[", "be", "]"}], " ", 
         RowBox[{"Cos", "[", "ga", "]"}]}], "-", 
        RowBox[{
         RowBox[{"Sin", "[", "al", "]"}], " ", 
         RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
       RowBox[{
        RowBox[{"Cos", "[", "ga", "]"}], " ", 
        RowBox[{"Sin", "[", "be", "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "al", "]"}], " ", 
        RowBox[{"Sin", "[", "be", "]"}]}], ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "al", "]"}]}], " ", 
        RowBox[{"Sin", "[", "be", "]"}]}], ",", 
       RowBox[{"Cos", "[", "be", "]"}]}], "}"}]}], "}"}]}], ";", 
  RowBox[{"inversereuler", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "reuler", "]"}], "]"}]}], ";", 
  RowBox[{"MatrixForm", "[", "inversereuler", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.805364638143445*^9, 3.805364638706503*^9}, {
   3.805367603358808*^9, 3.805367604193364*^9}, {3.80536879197514*^9, 
   3.805368851750115*^9}, 3.8062067460066767`*^9, {3.806206829235957*^9, 
   3.806206830866193*^9}, {3.806213829190654*^9, 3.806213839669977*^9}, 
   3.806366069736128*^9, {3.8104359720288982`*^9, 3.810436021684503*^9}, {
   3.810436077319186*^9, 3.810436077878421*^9}, 3.810436361340948*^9, {
   3.810436477733567*^9, 3.810436478774786*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "al", "]"}], " ", 
        RowBox[{"Cos", "[", "ga", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "be", "]"}], " ", 
        RowBox[{"Sin", "[", "al", "]"}], " ", 
        RowBox[{"Sin", "[", "ga", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "be", "]"}]}], " ", 
        RowBox[{"Cos", "[", "ga", "]"}], " ", 
        RowBox[{"Sin", "[", "al", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Cos", "[", "al", "]"}], " ", 
        RowBox[{"Sin", "[", "ga", "]"}]}]}], 
      RowBox[{
       RowBox[{"Sin", "[", "al", "]"}], " ", 
       RowBox[{"Sin", "[", "be", "]"}]}]},
     {
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "ga", "]"}], " ", 
        RowBox[{"Sin", "[", "al", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "al", "]"}], " ", 
        RowBox[{"Cos", "[", "be", "]"}], " ", 
        RowBox[{"Sin", "[", "ga", "]"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "al", "]"}], " ", 
        RowBox[{"Cos", "[", "be", "]"}], " ", 
        RowBox[{"Cos", "[", "ga", "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sin", "[", "al", "]"}], " ", 
        RowBox[{"Sin", "[", "ga", "]"}]}]}], 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "al", "]"}]}], " ", 
       RowBox[{"Sin", "[", "be", "]"}]}]},
     {
      RowBox[{
       RowBox[{"Sin", "[", "be", "]"}], " ", 
       RowBox[{"Sin", "[", "ga", "]"}]}], 
      RowBox[{
       RowBox[{"Cos", "[", "ga", "]"}], " ", 
       RowBox[{"Sin", "[", "be", "]"}]}], 
      RowBox[{"Cos", "[", "be", "]"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8063660744646063`*^9, 3.8067676779075603`*^9, 3.80691674484621*^9, 
   3.807191717076631*^9, 3.80722314937782*^9, 3.807240219355701*^9, {
   3.807248365490657*^9, 3.807248379823083*^9}, {3.807250488167864*^9, 
   3.807250502384117*^9}, {3.8072672551851254`*^9, 3.807267269500264*^9}, {
   3.807274668734078*^9, 3.807274681363749*^9}, {3.808640108801579*^9, 
   3.808640123081758*^9}, {3.8086921642298822`*^9, 3.808692177316709*^9}, {
   3.808704475759259*^9, 3.808704490025028*^9}, {3.808789555246249*^9, 
   3.808789570567862*^9}, 3.809305520549402*^9, {3.809329431868081*^9, 
   3.809329445959903*^9}, 3.810436175537197*^9, 3.810527681845336*^9, {
   3.813530819942477*^9, 3.81353083311171*^9}, {3.814061842448263*^9, 
   3.8140618554911327`*^9}, 3.814531339335731*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"angular", " ", "velocity"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8055228775255947`*^9, 3.8055228835378313`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tranalphp", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "be", "]"}], "*", 
        RowBox[{"Sin", "[", "ga", "]"}]}], ",", 
       RowBox[{"Cos", "[", "ga", "]"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "be", "]"}], "*", 
        RowBox[{"Cos", "[", "ga", "]"}]}], ",", 
       RowBox[{"-", 
        RowBox[{"Sin", "[", "ga", "]"}]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", "be", "]"}], ",", "0", ",", "1"}], "}"}]}], 
    "}"}]}], ";", 
  RowBox[{"inversetranalphp", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "tranalphp", "]"}], "]"}]}], ";", 
  RowBox[{"omp", "=", 
   RowBox[{"tranalphp", ".", "alcoordd"}]}], ";", 
  RowBox[{"omi", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"inversereuler", ".", "omp"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"al", "\[Element]", "Reals"}], ",", 
        RowBox[{"be", "\[Element]", "Reals"}], ",", 
        RowBox[{"ga", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"ompf", "=", 
   RowBox[{"omp", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"omif", "=", 
   RowBox[{"omi", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"xpaxis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "ga", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "be", "]"}], "*", 
       RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "ga", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "be", "]"}], "*", 
       RowBox[{"Sin", "[", "ga", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "be", "]"}], "*", 
      RowBox[{"Sin", "[", "ga", "]"}]}]}], "}"}]}], ";", 
  RowBox[{"ypaxis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cos", "[", "al", "]"}]}], "*", 
       RowBox[{"Sin", "[", "ga", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sin", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "be", "]"}], "*", 
       RowBox[{"Cos", "[", "ga", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Sin", "[", "al", "]"}]}], "*", 
       RowBox[{"Sin", "[", "ga", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "al", "]"}], "*", 
       RowBox[{"Cos", "[", "be", "]"}], "*", 
       RowBox[{"Cos", "[", "ga", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"Sin", "[", "be", "]"}], "*", 
      RowBox[{"Cos", "[", "ga", "]"}]}]}], "}"}]}], ";", 
  RowBox[{"zpaxis", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", "be", "]"}], "*", 
      RowBox[{"Sin", "[", "al", "]"}]}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "be", "]"}]}], "*", 
      RowBox[{"Cos", "[", "al", "]"}]}], ",", 
     RowBox[{"Cos", "[", "be", "]"}]}], "}"}]}], ";", 
  RowBox[{"xpaxisf", "=", 
   RowBox[{"xpaxis", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"ypaxisf", "=", 
   RowBox[{"ypaxis", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"zpaxisf", "=", 
   RowBox[{"zpaxis", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.805522027743101*^9, 3.805522137143208*^9}, {
   3.805522961821566*^9, 3.805522964700342*^9}, {3.8056091847337503`*^9, 
   3.805609213045499*^9}, {3.80691771125984*^9, 3.806917723637602*^9}, 
   3.806917883931974*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"kinetic", " ", "energy"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.805522858196134*^9, 3.805522862868388*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ip", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ipxx", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "ipyy", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "ipzz"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"tp", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     FractionBox["1", "2"], "*", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"ip", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
        RowBox[{"omp", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "*", 
        RowBox[{"omp", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.80552307660058*^9, 3.805523150264649*^9}, {
  3.80623340614047*^9, 3.806233410361792*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"potential", " ", "energy"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.806233728620138*^9, 3.806233736725799*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scoeffi", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"sxx", ",", "sxy", ",", "sxz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"sxy", ",", "syy", ",", "syz"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"sxz", ",", "syz", ",", "szz"}], "}"}]}], "}"}]}], ";", 
  RowBox[{"scoeffp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"reuler", "[", 
          RowBox[{"[", 
           RowBox[{"k", ",", "i"}], "]"}], "]"}], "*", 
         RowBox[{"reuler", "[", 
          RowBox[{"[", 
           RowBox[{"l", ",", "j"}], "]"}], "]"}], "*", 
         RowBox[{"scoeffi", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"deeg", "=", 
   RowBox[{"cc", "*", 
    RowBox[{"scoeffp", "[", 
     RowBox[{"[", 
      RowBox[{"3", ",", "3"}], "]"}], "]"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.80559951979348*^9, 3.805599615526432*^9}, {
   3.805599740211018*^9, 3.805599744400338*^9}, {3.805599821702183*^9, 
   3.805599866897216*^9}, 3.80568442732265*^9, {3.806233830437181*^9, 
   3.806233854452964*^9}, {3.8062339124061604`*^9, 3.806233912710185*^9}, 
   3.806234250055155*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Euler", " ", "equation"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.805523332970862*^9, 3.8055233377074337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"gaplv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], "*", "cc", "*", 
         RowBox[{"scoeffi", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "k"}], "]"}], "]"}], "*", 
         RowBox[{"reuler", "[", 
          RowBox[{"[", 
           RowBox[{"3", ",", "k"}], "]"}], "]"}], "*", 
         RowBox[{"inversereuler", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "l"}], "]"}], "]"}], "*", 
         RowBox[{"ep", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3", ",", "l"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"eueq1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ip", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}], "*", 
              RowBox[{"ompf", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", "t"}], 
          "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"ip", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "k"}], "]"}], "]"}], "*", 
            RowBox[{"omp", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "*", 
            RowBox[{"omp", "[", 
             RowBox[{"[", "l", "]"}], "]"}], "*", 
            RowBox[{"ep", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "k", ",", "i"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "n"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "n"}], "}"}]}], "]"}], "-", 
         RowBox[{"gaplv", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"al", "\[Rule]", 
           RowBox[{"alf", "[", "t", "]"}]}], ",", 
          RowBox[{"be", "\[Rule]", 
           RowBox[{"bef", "[", "t", "]"}]}], ",", 
          RowBox[{"ga", "\[Rule]", 
           RowBox[{"gaf", "[", "t", "]"}]}]}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"alf", "''"}], "[", "t", "]"}], "\[Rule]", "alddot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"bef", "''"}], "[", "t", "]"}], "\[Rule]", "beddot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"gaf", "''"}], "[", "t", "]"}], "\[Rule]", "gaddot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}], "\[Rule]", "aldot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}], "\[Rule]", "bedot"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}], "\[Rule]", "gadot"}], ",", 
      RowBox[{
       RowBox[{"alf", "[", "t", "]"}], "\[Rule]", "al"}], ",", 
      RowBox[{
       RowBox[{"bef", "[", "t", "]"}], "\[Rule]", "be"}], ",", 
      RowBox[{
       RowBox[{"gaf", "[", "t", "]"}], "\[Rule]", "ga"}]}], "}"}]}]}], ";", 
  RowBox[{"eueq2", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"eueq1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", 
         RowBox[{"tranalphp", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"gaallv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"-", 
       RowBox[{"D", "[", 
        RowBox[{"deeg", ",", 
         RowBox[{"alcoord", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"eueq4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{"tp", ",", 
             RowBox[{"alcoordd", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"al", "\[Rule]", 
              RowBox[{"alf", "[", "t", "]"}]}], ",", 
             RowBox[{"be", "\[Rule]", 
              RowBox[{"bef", "[", "t", "]"}]}], ",", 
             RowBox[{"ga", "\[Rule]", 
              RowBox[{"gaf", "[", "t", "]"}]}], ",", 
             RowBox[{"aldot", "\[Rule]", 
              RowBox[{
               RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
             RowBox[{"bedot", "\[Rule]", 
              RowBox[{
               RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
             RowBox[{"gadot", "\[Rule]", 
              RowBox[{
               RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}], ",", "t"}],
          "]"}], "-", 
        RowBox[{"D", "[", 
         RowBox[{"tp", ",", 
          RowBox[{"alcoord", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "-", 
        RowBox[{"gaallv", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"alf", "''"}], "[", "t", "]"}], "\[Rule]", "alddot"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"bef", "''"}], "[", "t", "]"}], "\[Rule]", "beddot"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"gaf", "''"}], "[", "t", "]"}], "\[Rule]", "gaddot"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"alf", "'"}], "[", "t", "]"}], "\[Rule]", "aldot"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"bef", "'"}], "[", "t", "]"}], "\[Rule]", "bedot"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"gaf", "'"}], "[", "t", "]"}], "\[Rule]", "gadot"}], ",", 
         RowBox[{
          RowBox[{"alf", "[", "t", "]"}], "\[Rule]", "al"}], ",", 
         RowBox[{
          RowBox[{"bef", "[", "t", "]"}], "\[Rule]", "be"}], ",", 
         RowBox[{
          RowBox[{"gaf", "[", "t", "]"}], "\[Rule]", "ga"}]}], "}"}]}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
  RowBox[{"Simplify", "[", 
   RowBox[{"eueq2", "-", "eueq4"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.805604147495249*^9, 3.8056042065270767`*^9}, {
  3.8056042935853167`*^9, 3.80560438240879*^9}, {3.805604674497752*^9, 
  3.805604674966983*^9}, {3.805684440603725*^9, 3.8056844443705807`*^9}, {
  3.806223723510997*^9, 3.806223723686583*^9}, {3.806223756471876*^9, 
  3.8062237567583733`*^9}, {3.806234210985939*^9, 3.806234229583911*^9}, {
  3.806234262019396*^9, 3.806234293778441*^9}, {3.8062343432841787`*^9, 
  3.8062343435872173`*^9}, {3.806241055573832*^9, 3.806241059966324*^9}, {
  3.806241177293412*^9, 3.806241188109829*^9}, {3.8072231722466373`*^9, 
  3.807223186665538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.806234270026587*^9, 3.80623429887339*^9}, 
   3.806234354622095*^9, 3.806241013412396*^9, 3.806241068018909*^9, 
   3.806241198827942*^9, 3.8062438671646757`*^9, 3.806292889312359*^9, 
   3.806310185989045*^9, 3.806325539612426*^9, 3.806330707865896*^9, 
   3.806366121346861*^9, 3.806767700920607*^9, 3.806917751638851*^9, 
   3.807191740074709*^9, 3.8072231983281603`*^9, 3.807240254399317*^9, 
   3.807248379595319*^9, 3.807250502144678*^9, 3.807267269276578*^9, 
   3.807274681137583*^9, 3.8086401229161654`*^9, 3.808692177091045*^9, 
   3.808704489848784*^9, 3.80878957039885*^9, {3.809305534687652*^9, 
   3.8093055363381844`*^9}, 3.809329445907477*^9, 3.810436224773129*^9, {
   3.810527695784231*^9, 3.810527697434057*^9}, 3.813530832710567*^9, 
   3.8140618551148157`*^9, 3.814531351871982*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   SubscriptBox["h", "+"], ",", " ", 
   SubscriptBox["h", "\[Times]"]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.810435817600786*^9, 3.810435854164074*^9}, {
  3.810436118852908*^9, 3.8104361333150663`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"thhat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "th", "]"}], "*", 
      RowBox[{"Cos", "[", "vp", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "th", "]"}], "*", 
      RowBox[{"Sin", "[", "vp", "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "th", "]"}]}]}], "}"}]}], ";", 
  RowBox[{"vphat", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", "vp", "]"}]}], ",", 
     RowBox[{"Cos", "[", "vp", "]"}], ",", "0"}], "}"}]}], ";", 
  RowBox[{"c2abc", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"de2", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"]}], "-", 
           RowBox[{"de3", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ")"}], "2"]}]}], ")"}]}], ",", 
        
        RowBox[{
         RowBox[{
          FractionBox["de3", "ipzz"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "+", 
         RowBox[{"dxy", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["de2", "ipyy"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"dxz", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["de3", "ipzz"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "+", 
         RowBox[{"dxy", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"de3", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ")"}], "2"]}], "-", 
           RowBox[{"de1", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"]}]}], ")"}]}], ",", 
        
        RowBox[{
         RowBox[{
          FractionBox["de1", "ipxx"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{"dyz", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["de2", "ipyy"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "+", 
         RowBox[{"dxz", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{
          FractionBox["de1", "ipxx"], "*", 
          RowBox[{"gap", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], "+", 
         RowBox[{"dyz", "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "*", 
          RowBox[{"omp", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"de1", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ")"}], "2"]}], "-", 
           RowBox[{"de2", "*", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"omp", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ")"}], "2"]}]}], ")"}]}]}], 
       "}"}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"de1", "\[Rule]", 
       RowBox[{"ipyy", "-", "ipzz"}]}], ",", 
      RowBox[{"de2", "\[Rule]", 
       RowBox[{"ipzz", "-", "ipxx"}]}], ",", 
      RowBox[{"de3", "\[Rule]", 
       RowBox[{"ipxx", "-", "ipyy"}]}], ",", 
      RowBox[{"dxy", "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"ipxx", "-", "ipyy"}], ")"}], "2"], "ipzz"], "+", "ipyy", 
        "-", 
        RowBox[{"2", "*", "ipzz"}], "+", "ipxx"}]}], ",", 
      RowBox[{"dxz", "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"ipzz", "-", "ipxx"}], ")"}], "2"], "ipyy"], "+", "ipxx", 
        "-", 
        RowBox[{"2", "*", "ipyy"}], "+", "ipzz"}]}], ",", 
      RowBox[{"dyz", "\[Rule]", 
       RowBox[{
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"ipyy", "-", "ipzz"}], ")"}], "2"], "ipxx"], "+", "ipzz", 
        "-", 
        RowBox[{"2", "*", "ipxx"}], "+", "ipyy"}]}]}], "}"}]}]}], ";", 
  RowBox[{"c2iabc", "=", 
   RowBox[{"inversereuler", ".", "c2abc", ".", "reuler"}]}], ";", 
  RowBox[{"hplus", "=", 
   RowBox[{
    FractionBox["1", "2"], "*", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"thhat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"thhat", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "-", 
         RowBox[{
          RowBox[{"vphat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"vphat", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], ")"}], "*", 
       RowBox[{"c2iabc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
  RowBox[{"hcross", "=", 
   RowBox[{
    FractionBox["1", "2"], "*", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"thhat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"vphat", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"vphat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "*", 
          RowBox[{"thhat", "[", 
           RowBox[{"[", "j", "]"}], "]"}]}]}], ")"}], "*", 
       RowBox[{"c2iabc", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
  RowBox[{"thhatp", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"reuler", ".", "thhat"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"al", "\[Element]", "Reals"}], ",", 
        RowBox[{"be", "\[Element]", "Reals"}], ",", 
        RowBox[{"ga", "\[Element]", "Reals"}], ",", 
        RowBox[{"th", "\[Element]", "Reals"}], ",", 
        RowBox[{"vp", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], ";", 
  RowBox[{"vphatp", "=", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"reuler", ".", "vphat"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"al", "\[Element]", "Reals"}], ",", 
        RowBox[{"be", "\[Element]", "Reals"}], ",", 
        RowBox[{"ga", "\[Element]", "Reals"}], ",", ",", 
        RowBox[{"th", "\[Element]", "Reals"}], ",", 
        RowBox[{"vp", "\[Element]", "Reals"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.810353909794448*^9, 3.8103539121780853`*^9}, {
   3.810353943761426*^9, 3.810354049055339*^9}, {3.810354140286072*^9, 
   3.8103541411818037`*^9}, 3.8104363534025183`*^9, 3.810436409007337*^9, {
   3.81043652968576*^9, 3.8104365953004007`*^9}, {3.810436671842678*^9, 
   3.810436877967894*^9}, {3.81043690975806*^9, 3.8104369767201567`*^9}, {
   3.8104370460918427`*^9, 3.810437150334285*^9}, {3.810437360217078*^9, 
   3.810437366680132*^9}, {3.814097469051682*^9, 3.814097531469973*^9}, {
   3.814097661654158*^9, 3.814097661806138*^9}, {3.814097705849977*^9, 
   3.814097717823378*^9}, {3.814097749958283*^9, 3.814097767690976*^9}}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"numerical", " ", "values"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.806918047918933*^9, 3.8069180524990463`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"cc1", "=", 
   RowBox[{"-", "1"}]}], ";", 
  RowBox[{"sxx1", "=", "0.01"}], ";", 
  RowBox[{"syy1", "=", "0.02"}], ";", 
  RowBox[{"szz1", "=", "0.05"}], ";", 
  RowBox[{"sxy1", "=", "0.0"}], ";", 
  RowBox[{"sxz1", "=", "0.0"}], ";", 
  RowBox[{"syz1", "=", "0"}], ";", 
  RowBox[{"ipxx1", "=", "1"}], ";", 
  RowBox[{"ipyy1", "=", "1"}], ";", 
  RowBox[{"ipzz1", "=", "1.1"}], ";", 
  RowBox[{"tf1", "=", "2000"}], ";", 
  RowBox[{"numeueq", "=", 
   RowBox[{"eueq4", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "cc1"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}], ",", 
      RowBox[{"ipxx", "\[Rule]", "ipxx1"}], ",", 
      RowBox[{"ipyy", "\[Rule]", "ipyy1"}], ",", 
      RowBox[{"ipzz", "\[Rule]", "ipzz1"}], ",", 
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"alddot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "''"}], "[", "t", "]"}]}], ",", 
      RowBox[{"beddot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "''"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gaddot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "''"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"numeueq2", "=", 
   RowBox[{"eueq4", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "0"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}], ",", 
      RowBox[{"ipxx", "\[Rule]", "ipxx1"}], ",", 
      RowBox[{"ipyy", "\[Rule]", "ipyy1"}], ",", 
      RowBox[{"ipzz", "\[Rule]", "ipzz1"}], ",", 
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"alddot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "''"}], "[", "t", "]"}]}], ",", 
      RowBox[{"beddot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "''"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gaddot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "''"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"deeg1", "=", 
   RowBox[{"deeg", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "cc1"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}]}], "}"}]}]}], ";", 
  RowBox[{"gaplv1", "=", 
   RowBox[{"gaplv", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "cc1"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}]}], "}"}]}]}], ";", 
  RowBox[{"hplus1", "=", 
   RowBox[{"hplus", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "cc1"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}], ",", 
      RowBox[{"gapx", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"gapy", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"gapz", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"ipxx", "\[Rule]", "ipxx1"}], ",", 
      RowBox[{"ipyy", "\[Rule]", "ipyy1"}], ",", 
      RowBox[{"ipzz", "\[Rule]", "ipzz1"}]}], "}"}]}]}], ";", 
  RowBox[{"hcross1", "=", 
   RowBox[{"hcross", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"cc", "\[Rule]", "cc1"}], ",", 
      RowBox[{"sxx", "\[Rule]", "sxx1"}], ",", 
      RowBox[{"syy", "\[Rule]", "syy1"}], ",", 
      RowBox[{"szz", "\[Rule]", "szz1"}], ",", 
      RowBox[{"sxy", "\[Rule]", "sxy1"}], ",", 
      RowBox[{"sxz", "\[Rule]", "sxz1"}], ",", 
      RowBox[{"syz", "\[Rule]", "syz1"}], ",", 
      RowBox[{"gapx", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{"gapy", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"gapz", "\[Rule]", 
       RowBox[{"gaplv1", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{"ipxx", "\[Rule]", "ipxx1"}], ",", 
      RowBox[{"ipyy", "\[Rule]", "ipyy1"}], ",", 
      RowBox[{"ipzz", "\[Rule]", "ipzz1"}]}], "}"}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.80623448460632*^9, 3.80623458113477*^9}, {
   3.8062347289751596`*^9, 3.8062347355974827`*^9}, 3.806241945620017*^9, 
   3.8062420050740423`*^9, 3.806242153207431*^9, {3.806242313609221*^9, 
   3.806242392006459*^9}, {3.806243938785206*^9, 3.806243944415584*^9}, {
   3.806244330728972*^9, 3.8062444067896547`*^9}, {3.806310201972272*^9, 
   3.806310209164283*^9}, {3.806310444650074*^9, 3.806310447595996*^9}, {
   3.806311453516788*^9, 3.8063114597291718`*^9}, {3.80631279875914*^9, 
   3.8063128278829403`*^9}, {3.806318236980587*^9, 3.806318242754158*^9}, {
   3.806318551007201*^9, 3.806318551871686*^9}, {3.8063191395867367`*^9, 
   3.806319149752881*^9}, {3.8063199426615868`*^9, 3.806319942908546*^9}, {
   3.8063200216168118`*^9, 3.8063200260565233`*^9}, {3.8063201116323023`*^9, 
   3.806320127858796*^9}, 3.806325692821348*^9, {3.806325747723884*^9, 
   3.806325750935771*^9}, {3.806325791880657*^9, 3.80632580312589*^9}, {
   3.806325900460247*^9, 3.806325903176922*^9}, 3.806326213097526*^9, 
   3.8063262506456203`*^9, {3.8063309444298573`*^9, 3.8063309464040422`*^9}, {
   3.806331021728862*^9, 3.806331028866816*^9}, {3.806331197936771*^9, 
   3.80633120082585*^9}, {3.8063313034930277`*^9, 3.806331306016006*^9}, {
   3.806331451209598*^9, 3.806331452999805*^9}, {3.806331722411775*^9, 
   3.806331724768388*^9}, {3.8063327308907022`*^9, 3.806332732691321*^9}, {
   3.806332841175088*^9, 3.806332853849381*^9}, {3.806332959902071*^9, 
   3.8063329612378902`*^9}, {3.806333074707593*^9, 3.80633307628017*^9}, {
   3.806333217328867*^9, 3.80633322421983*^9}, {3.806366130505542*^9, 
   3.8063661636343117`*^9}, {3.806366311277543*^9, 3.80636633928972*^9}, {
   3.8063669252765503`*^9, 3.806366928650381*^9}, {3.806367637225692*^9, 
   3.806367638863894*^9}, 3.806368462524692*^9, {3.806368528113908*^9, 
   3.806368528224785*^9}, 3.806396303379218*^9, {3.8063963425322847`*^9, 
   3.806396355920765*^9}, {3.806399797320071*^9, 3.806399803933757*^9}, {
   3.8063999488925123`*^9, 3.8063999771340313`*^9}, {3.806400195445984*^9, 
   3.806400207979557*^9}, 3.806402845878765*^9, {3.806767716632815*^9, 
   3.806767723295622*^9}, {3.806768004015643*^9, 3.806768012835054*^9}, {
   3.8067682739130287`*^9, 3.806768276946765*^9}, {3.8067708158097754`*^9, 
   3.806770822647018*^9}, {3.806771036936365*^9, 3.806771056988944*^9}, {
   3.8067711954367313`*^9, 3.806771195684259*^9}, {3.806771272975041*^9, 
   3.806771273246869*^9}, {3.80677131510506*^9, 3.8067713266929626`*^9}, {
   3.8067713796136923`*^9, 3.806771386920004*^9}, 3.806771746925654*^9, {
   3.806771854633154*^9, 3.806771854778805*^9}, {3.806772425292644*^9, 
   3.806772431945327*^9}, {3.806773876347789*^9, 3.8067738789265203`*^9}, {
   3.806774506290888*^9, 3.8067745102321167`*^9}, {3.8067746582555857`*^9, 
   3.8067746637449617`*^9}, {3.806774705784965*^9, 3.8067747077774353`*^9}, {
   3.8067758044197483`*^9, 3.8067758052044497`*^9}, {3.806776586671782*^9, 
   3.8067765956762533`*^9}, {3.8067778205375633`*^9, 3.806777829954166*^9}, {
   3.806917762907187*^9, 3.8069177651496277`*^9}, 3.806931627301128*^9, {
   3.806931771641265*^9, 3.806931771810266*^9}, {3.806931828791318*^9, 
   3.806931854781362*^9}, {3.806931973762076*^9, 3.806931996427593*^9}, {
   3.806932030743772*^9, 3.806932030867207*^9}, 3.806932061152831*^9, {
   3.807191747126409*^9, 3.807191753786518*^9}, 3.807191819614274*^9, {
   3.807191855713852*^9, 3.807191855834053*^9}, {3.807223217033042*^9, 
   3.807223241594633*^9}, {3.807224390847859*^9, 3.807224391903661*^9}, {
   3.807224530056603*^9, 3.807224530602344*^9}, {3.8072246168906918`*^9, 
   3.807224618471439*^9}, {3.807224676156158*^9, 3.807224725449811*^9}, {
   3.8072402519341383`*^9, 3.807240265250856*^9}, 3.8072404187116327`*^9, 
   3.807240520969637*^9, {3.807248455919553*^9, 3.807248472495994*^9}, {
   3.807248837404509*^9, 3.8072488409876947`*^9}, {3.807248944923617*^9, 
   3.807248963674272*^9}, {3.807249952763776*^9, 3.807249964426859*^9}, {
   3.807249998444439*^9, 3.807249999162855*^9}, {3.807250508395499*^9, 
   3.807250511338957*^9}, {3.807250612731917*^9, 3.807250641772397*^9}, 
   3.807250697291984*^9, {3.807267260508019*^9, 3.807267274288377*^9}, {
   3.807267387055354*^9, 3.8072673877420692`*^9}, {3.807267602923004*^9, 
   3.807267607881578*^9}, {3.8072677088573933`*^9, 3.807267730119946*^9}, {
   3.80726778893579*^9, 3.80726779162269*^9}, 3.807267912405891*^9, {
   3.807268637998246*^9, 3.8072686443971786`*^9}, {3.8072699351035843`*^9, 
   3.8072699701743298`*^9}, {3.8086402554612503`*^9, 3.808640260388014*^9}, {
   3.808642549857953*^9, 3.808642551249077*^9}, {3.808642733147468*^9, 
   3.8086427361437674`*^9}, {3.808645155155847*^9, 3.808645158151061*^9}, {
   3.808647199162623*^9, 3.808647200938445*^9}, {3.808649869192945*^9, 
   3.808649870663258*^9}, {3.8087054352516603`*^9, 3.8087054386427927`*^9}, {
   3.8087055469047623`*^9, 3.8087055489358892`*^9}, 3.8093057084821653`*^9, {
   3.809309235183135*^9, 3.809309237982561*^9}, {3.8093094243030987`*^9, 
   3.809309425789962*^9}, {3.809309876928994*^9, 3.809309879728249*^9}, {
   3.810531676590508*^9, 3.810531786511009*^9}, {3.810531828191494*^9, 
   3.810531843791068*^9}, {3.810537821919986*^9, 3.810537825215357*^9}, 
   3.81406213421126*^9, {3.814062489924192*^9, 3.814062493381608*^9}, {
   3.81406529242178*^9, 3.814065292937483*^9}, {3.81406589391848*^9, 
   3.81406590146696*^9}, 3.8145313472818613`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"solution", " ", "I"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.814531566140031*^9, 3.814531571319613*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"al1", "=", 
   FractionBox["Pi", "2"]}], ";", 
  RowBox[{"be1", "=", "0.701"}], ";", 
  RowBox[{"ga1", "=", "0"}], ";", 
  RowBox[{"aldot1", "=", "1.482"}], ";", 
  RowBox[{"bedot1", "=", "0"}], ";", 
  RowBox[{"gadot1", "=", 
   RowBox[{"1", "-", 
    RowBox[{"aldot1", "*", 
     RowBox[{"Cos", "[", "be1", "]"}]}]}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.81242523052137*^9, 3.812425247591549*^9}, {
   3.8124253034954147`*^9, 3.812425309830776*^9}, {3.8124272382010813`*^9, 
   3.812427243272354*^9}, {3.8124289189291983`*^9, 3.8124289190537786`*^9}, {
   3.812519653498034*^9, 3.812519662057658*^9}, {3.812683826399784*^9, 
   3.812683847519299*^9}, {3.8128552145458517`*^9, 3.812855231505636*^9}, {
   3.812855981015687*^9, 3.812855981159255*^9}, {3.812856228285387*^9, 
   3.812856244397781*^9}, {3.8133948668206167`*^9, 3.813394867965412*^9}, {
   3.813394908912644*^9, 3.8133949369787073`*^9}, {3.81339581725858*^9, 
   3.8133958275122757`*^9}, {3.8133962375691566`*^9, 3.813396248090845*^9}, {
   3.813399474009033*^9, 3.81339948953018*^9}, {3.813466586608033*^9, 
   3.813466703824069*^9}, {3.813467267933506*^9, 3.8134672758556843`*^9}, {
   3.813661779491761*^9, 3.813661808084597*^9}, {3.8136662974590673`*^9, 
   3.81366630977253*^9}, {3.8140658268856907`*^9, 3.814065849244261*^9}, 
   3.8145315607560997`*^9}],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"solution", " ", "II"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8145315813578978`*^9, 3.8145315855506687`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"al1", "=", 
   FractionBox["Pi", "2"]}], ";", 
  RowBox[{"be1", "=", "1.065"}], ";", 
  RowBox[{"ga1", "=", "0"}], ";", 
  RowBox[{"aldot1", "=", "0.861"}], ";", 
  RowBox[{"bedot1", "=", "0"}], ";", 
  RowBox[{"gadot1", "=", 
   RowBox[{"1", "-", 
    RowBox[{"aldot1", "*", 
     RowBox[{"Cos", "[", "be1", "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8145315889286757`*^9, 3.8145316025518427`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solal", "=", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"numeueq", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"numeueq", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"numeueq", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{"alf", "[", "0", "]"}], "\[Equal]", "al1"}], ",", 
      RowBox[{
       RowBox[{"bef", "[", "0", "]"}], "\[Equal]", "be1"}], ",", 
      RowBox[{
       RowBox[{"gaf", "[", "0", "]"}], "\[Equal]", "ga1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"alf", "'"}], "[", "0", "]"}], "\[Equal]", "aldot1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"bef", "'"}], "[", "0", "]"}], "\[Equal]", "bedot1"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "0", "]"}], "\[Equal]", "gadot1"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"alf", ",", "bef", ",", "gaf"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "tf1"}], "}"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.806228920376128*^9, 3.806228944174219*^9}, {
   3.806230610480597*^9, 3.806230610929143*^9}, {3.806230646687372*^9, 
   3.80623064757238*^9}, {3.80623151068327*^9, 3.806231517753055*^9}, {
   3.806234712111309*^9, 3.806234760157686*^9}, {3.806234791406179*^9, 
   3.80623485246926*^9}, {3.806234984531191*^9, 3.8062349903054132`*^9}, {
   3.8062350341112022`*^9, 3.80623504004714*^9}, {3.806235199904462*^9, 
   3.8062352023034687`*^9}, {3.80623545146877*^9, 3.806235457226334*^9}, {
   3.806235548943762*^9, 3.806235553120895*^9}, {3.806236102443316*^9, 
   3.806236108779813*^9}, 3.8062421587251883`*^9, 3.8062444833165293`*^9, {
   3.8062447787728777`*^9, 3.806244788620761*^9}, {3.806245002402923*^9, 
   3.806245007405138*^9}, {3.806245087983708*^9, 3.806245097015066*^9}, {
   3.8063114660114117`*^9, 3.806311480724207*^9}, {3.806312385174967*^9, 
   3.80631238626223*^9}, {3.806318272892063*^9, 3.806318273372332*^9}, {
   3.8063257118811703`*^9, 3.8063257168407393`*^9}, {3.806330731169094*^9, 
   3.806330731492044*^9}, {3.806332344515626*^9, 3.806332346881579*^9}, {
   3.8063324258729467`*^9, 3.806332426301814*^9}, {3.806332476216796*^9, 
   3.806332497280097*^9}, {3.806332533998735*^9, 3.806332537534278*^9}, 
   3.806366141585779*^9, 3.806767737368435*^9, {3.8067680075624247`*^9, 
   3.806768007799204*^9}, {3.806768581931796*^9, 3.806768583908738*^9}, {
   3.806768616521965*^9, 3.806768616696652*^9}, 3.806771414476894*^9, {
   3.806771664141223*^9, 3.806771680706882*^9}, {3.806771782115933*^9, 
   3.806771782711063*^9}, {3.8067724383963327`*^9, 3.8067724387092876`*^9}, {
   3.8067752127939663`*^9, 3.806775215317809*^9}, 3.8067752914517517`*^9, {
   3.806775474828806*^9, 3.806775476516245*^9}, {3.806775816143064*^9, 
   3.806775816315584*^9}, {3.8067759503659563`*^9, 3.8067759506884127`*^9}, 
   3.8067761029525833`*^9, {3.806776652880501*^9, 3.806776653202553*^9}, {
   3.806776707312722*^9, 3.8067767088081617`*^9}, 3.80677793313076*^9, {
   3.806778076053751*^9, 3.806778078308715*^9}, {3.806917803010026*^9, 
   3.8069178151450233`*^9}, {3.806918181125226*^9, 3.80691821258245*^9}, 
   3.806919096539064*^9, 3.806919377848363*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"alf", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVxXk0GwYAB+DUqqwbXRy1ZmsZja3Vkj5zvTE/t8ziKTbzUGfRVlwLRkcb
FUdCRBLiCIk42m59Ha2Nsj0a5/PypChb6fHqyJijQkc7tmz743vfBzEpgee1
CASC83/+P99wYqFvcJ/rHyT1+hHz164Kc0k/aMBfNCsqv98bZI2YMrAXgM8b
1XMdvBAMXX6XqXEOxZQP575zUDR6z3KWFm9GIWZGK3xyKh5hIWb6+nrnYefI
oghnkpAYV/rSjXwBsd0Zx9ut02AXy/3NoZIO0wG/96kuDAzPfnTsk1epcOzw
VMa5ZeH7NzMpUYSv4adoPNWjyUYKhesW/3EGWKtPyogHc7E6Q7TddM9CfHGD
EWfsCqwpmXHmPtk4Ws6w3OfFREBei9A26zLo4wuS0eF8WAWgZZSZC4GPaHT7
wwKoSK0d7l1X4DJyt5d/mwVb322mzeZVlEccuC63KcIDT2XN1T+ZMBw0WYvg
FuPxL3pn5PrXcJFOo9YbsjH4itnlbVyA2J5OWiGDg2NtYb09Z1g4l6OWm+yW
YuZnskqLWghKUmAAN42LdA7571JaET5VJesFPy1HzjRboJNYjOEhi0TNDR7O
zZNJgyklUDA7+gUxFWjxau8LTmejecvPWkDkI/y4TPWQzcEppa54Y5KPFwMj
eyJeKVQ589FvFQiw+TyY73erDP47Wsvr3kJ8FTzuMy7nolF+L9D2HyFqi6+t
1QyVI9ip6Ye8zkq0imklJ1J5iPxmVTcqtQprX7wUXN/ioWirwOPgSRFUToLb
XEYFqK+3j/AeiWDyeEE3mcBHO0mlMKuohn3k2dn1fD4i65g6vn41KJOmriW8
I4Bj+umVNO1aTMi/y8oXClD1xg1qeG8tRg49IR44LEQOOh/eSq7DNkm+wpQJ
scKPSFFSxDDQkbtIyJXwCt3psX4uRnw7Q9lxtxJB+xPY5c31SCo0TbN1rUJk
pHBDGdaAKOdFdtD9KhDoW+kZxhKUtkUsXPIXQeDk+OvUmASt2uofyRMiaC/u
DxV4SpHO+lbkG1SNVcVSOEksRWZ/d1fss2ro9I01uexKkThnGGgWU4Npzgn6
bnAj+L2mVlMvahBr95ks+qdG0IctjLZyaiEgDnMMDWSwb3PPuLNXi1ztp4rd
CzI4hBgdvlhSB3j0eGhGZbB8RrDpf1uM+UvqOyUWTaCRpUVGdWIYM/WWtVlN
sKxy2BizrEclkzg7t9iEtd+XH5y8WQ9WRNS9cZdmrO74q/PsGyCd3Eh5T9KM
R0tjJYzuBhRPG4y07zSDa3p0R+MqQbZ/wmmtL1vwLyBRzE4=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3499#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {0., 2731.0042526515285`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwVxXk0GwYAB+DUqqwbXRy1ZmsZja3Vkj5zvTE/t8ziKTbzUGfRVlwLRkcb
FUdCRBLiCIk42m59Ha2Nsj0a5/PypChb6fHqyJijQkc7tmz743vfBzEpgee1
CASC83/+P99wYqFvcJ/rHyT1+hHz164Kc0k/aMBfNCsqv98bZI2YMrAXgM8b
1XMdvBAMXX6XqXEOxZQP575zUDR6z3KWFm9GIWZGK3xyKh5hIWb6+nrnYefI
oghnkpAYV/rSjXwBsd0Zx9ut02AXy/3NoZIO0wG/96kuDAzPfnTsk1epcOzw
VMa5ZeH7NzMpUYSv4adoPNWjyUYKhesW/3EGWKtPyogHc7E6Q7TddM9CfHGD
EWfsCqwpmXHmPtk4Ws6w3OfFREBei9A26zLo4wuS0eF8WAWgZZSZC4GPaHT7
wwKoSK0d7l1X4DJyt5d/mwVb322mzeZVlEccuC63KcIDT2XN1T+ZMBw0WYvg
FuPxL3pn5PrXcJFOo9YbsjH4itnlbVyA2J5OWiGDg2NtYb09Z1g4l6OWm+yW
YuZnskqLWghKUmAAN42LdA7571JaET5VJesFPy1HzjRboJNYjOEhi0TNDR7O
zZNJgyklUDA7+gUxFWjxau8LTmejecvPWkDkI/y4TPWQzcEppa54Y5KPFwMj
eyJeKVQ589FvFQiw+TyY73erDP47Wsvr3kJ8FTzuMy7nolF+L9D2HyFqi6+t
1QyVI9ip6Ye8zkq0imklJ1J5iPxmVTcqtQprX7wUXN/ioWirwOPgSRFUToLb
XEYFqK+3j/AeiWDyeEE3mcBHO0mlMKuohn3k2dn1fD4i65g6vn41KJOmriW8
I4Bj+umVNO1aTMi/y8oXClD1xg1qeG8tRg49IR44LEQOOh/eSq7DNkm+wpQJ
scKPSFFSxDDQkbtIyJXwCt3psX4uRnw7Q9lxtxJB+xPY5c31SCo0TbN1rUJk
pHBDGdaAKOdFdtD9KhDoW+kZxhKUtkUsXPIXQeDk+OvUmASt2uofyRMiaC/u
DxV4SpHO+lbkG1SNVcVSOEksRWZ/d1fss2ro9I01uexKkThnGGgWU4Npzgn6
bnAj+L2mVlMvahBr95ks+qdG0IctjLZyaiEgDnMMDWSwb3PPuLNXi1ztp4rd
CzI4hBgdvlhSB3j0eGhGZbB8RrDpf1uM+UvqOyUWTaCRpUVGdWIYM/WWtVlN
sKxy2BizrEclkzg7t9iEtd+XH5y8WQ9WRNS9cZdmrO74q/PsGyCd3Eh5T9KM
R0tjJYzuBhRPG4y07zSDa3p0R+MqQbZ/wmmtL1vwLyBRzE4=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3499#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {0., 2731.0042526515285`}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 2000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"bef", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAghPS5MDFAT9cHXlwPQrxP8win8NA
TUBAZT1rGf9d6z8l/5wwxPxQQHddzQQSTPI/xnsYgf88WUCnqCJ6iy/mP79R
i+jlqWBAASfz8zEQzz9bVyAODg1lQFTgDAQdHuw/aGSM9EElaUBgniyHpxjR
PzVjjtg3lW1ArAdKt0a+6D/H2ygeO/hwQGrCSetk4/A/qwl2MGAAc0BmLH+x
VErvP28wjkFmNHVAc9VIHaOw8T/s2hEz8kJ3QIxqhiAL1+0/LjB2ZCJHeUCa
J32kdtjiP1B+pZQzd3tAWIWOpTlm8T8rUEClyoF9QGnycPUt2+g/5hqmtEK4
f0D3SGl4/lfxPzNI9oEv8oBAM3qn8hvZ5z/QRM+ZgPWBQEvFGlrpGPE/3L0N
McIOg0BEbnwPJjLiP8X4gbhGFYRAZkV7Ui/Z8D8esFu/uzGFQGxnNwi5Wek/
2rwl5gJJhkCESzp2sJK3P3KLJf2MTYdACqOr8yQY4j961oqTB2iIQHTN4KXW
Scc/XuMlGsVviUD1I7Ja/8znP6VFscBUcopAjGdEvdXA8D9cJKLm1IqLQLIx
jujvo9s/78TI/JeQjECUfGz9MLzuP/LhVJJLrI1AeoVmXYi04j9YVNFH0cKO
QHJVDv+cxtg/moiD7ZnGj0BXsaeAUO7DP6acTYkpcJBARkg4uny94z/tVfST
p/OQQGDdDoIssNI/5jmTro50kUAF9Cu5uULlPxfc5AhuAJJAabck9rqk0j82
X1Hb7oKSQAtGxdSjrNc/jaBw7WcQk0CRHCQWl+3PP9LCqneClJNAAnK4gLbN
5z/ID90RBhaUQP/oEB820fA/9hrC64GilEC6Zxc25HPZPxIHwj2fJZVAI70O
dfwl7z9msXTPtLOVQFr1FPUE2OY/bIYfcTM/lkDo04jhcFbTP2A85YpTwZZA
IoIOiy4N0z+MsF3ka06XQAHcCIg1s9c/pgXxtSXSl0DP/6MiQBziP3KFfJdI
U5hAU4VcKWht7D92w7q4Y9+YQP+vNYwqtro/aOITUiBimUC9cPMmXlDnP5K/
HyvV75lAQDwR9t6s0T9txyMU83qaQEsXqDDw6Ok/NrBCdbL8mkCWOUyHhubW
PzdXFBZqiZtApHY2qS2Z7D8m3wAvwwycQHVg1szRXMs/TSWghxSbnEDmOzks
mY7mPyaWN/DOJp1AYLgyStKE8T/t5+nQKqmdQD/gG873a+s/7PdO8X42nkAa
scUKXtrxP9nozol0up5AtRy3HH3A5j+OHx33/z+fQGwknKlhJd4/S07V8Q==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3543#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {0., 1.143571871527312}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAghPS5MDFAT9cHXlwPQrxP8win8NA
TUBAZT1rGf9d6z8l/5wwxPxQQHddzQQSTPI/xnsYgf88WUCnqCJ6iy/mP79R
i+jlqWBAASfz8zEQzz9bVyAODg1lQFTgDAQdHuw/aGSM9EElaUBgniyHpxjR
PzVjjtg3lW1ArAdKt0a+6D/H2ygeO/hwQGrCSetk4/A/qwl2MGAAc0BmLH+x
VErvP28wjkFmNHVAc9VIHaOw8T/s2hEz8kJ3QIxqhiAL1+0/LjB2ZCJHeUCa
J32kdtjiP1B+pZQzd3tAWIWOpTlm8T8rUEClyoF9QGnycPUt2+g/5hqmtEK4
f0D3SGl4/lfxPzNI9oEv8oBAM3qn8hvZ5z/QRM+ZgPWBQEvFGlrpGPE/3L0N
McIOg0BEbnwPJjLiP8X4gbhGFYRAZkV7Ui/Z8D8esFu/uzGFQGxnNwi5Wek/
2rwl5gJJhkCESzp2sJK3P3KLJf2MTYdACqOr8yQY4j961oqTB2iIQHTN4KXW
Scc/XuMlGsVviUD1I7Ja/8znP6VFscBUcopAjGdEvdXA8D9cJKLm1IqLQLIx
jujvo9s/78TI/JeQjECUfGz9MLzuP/LhVJJLrI1AeoVmXYi04j9YVNFH0cKO
QHJVDv+cxtg/moiD7ZnGj0BXsaeAUO7DP6acTYkpcJBARkg4uny94z/tVfST
p/OQQGDdDoIssNI/5jmTro50kUAF9Cu5uULlPxfc5AhuAJJAabck9rqk0j82
X1Hb7oKSQAtGxdSjrNc/jaBw7WcQk0CRHCQWl+3PP9LCqneClJNAAnK4gLbN
5z/ID90RBhaUQP/oEB820fA/9hrC64GilEC6Zxc25HPZPxIHwj2fJZVAI70O
dfwl7z9msXTPtLOVQFr1FPUE2OY/bIYfcTM/lkDo04jhcFbTP2A85YpTwZZA
IoIOiy4N0z+MsF3ka06XQAHcCIg1s9c/pgXxtSXSl0DP/6MiQBziP3KFfJdI
U5hAU4VcKWht7D92w7q4Y9+YQP+vNYwqtro/aOITUiBimUC9cPMmXlDnP5K/
HyvV75lAQDwR9t6s0T9txyMU83qaQEsXqDDw6Ok/NrBCdbL8mkCWOUyHhubW
PzdXFBZqiZtApHY2qS2Z7D8m3wAvwwycQHVg1szRXMs/TSWghxSbnEDmOzks
mY7mPyaWN/DOJp1AYLgyStKE8T/t5+nQKqmdQD/gG873a+s/7PdO8X42nkAa
scUKXtrxP9nozol0up5AtRy3HH3A5j+OHx33/z+fQGwknKlhJd4/S07V8Q==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3543#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {0., 1.143571871527312}}, 
                    PlotRangeClipping -> True, PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 2000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ",", 
    RowBox[{"gaf", "\[Rule]", 
     TagBox[
      TemplateBox[{RowBox[{
          StyleBox[
           TagBox["InterpolatingFunction", "SummaryHead"], 
           "NonInterpretableSummary"], 
          StyleBox["[", "NonInterpretableSummary"], 
          DynamicModuleBox[{Typeset`open$$ = False}, 
           PanelBox[
            PaneSelectorBox[{False -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquarePlusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAghPS5MDFAT9QuLPckrf0Pswin8NA
TUBAL9fLi0bqC8Al/5wwxPxQQJjhkS0FUiHAxnsYgf88WUAk64FUcBYowL9R
i+jlqWBAPv7gdM02MMBbVyAODg1lQKrk0i2g3DTAaGSM9EElaUBSOjiOeoU4
wDVjjtg3lW1AGLjjCyd0PcDH2ygeO/hwQBil+25eZ0HAqwl2MGAAc0AqJT9U
8SpDwG8wjkFmNHVApfbfQ7vNRcDs2hEz8kJ3QM0Lg/xee0fALjB2ZCJHeUA1
mO8zzmZJwFB+pZQzd3tArSGCEIf3S8ArUEClyoF9QM/GA+2Zuk3A5hqmtEK4
f0C7dHtaESdQwDNI9oEv8oBA8oI3QKp+UcDQRM+ZgPWBQOR3rS9OalLA3L0N
McIOg0BhpuuzArpTwMX4gbhGFYRAdM47BD6ZVMAesFu/uzGFQHmLn4uv0lXA
2rwl5gJJhkBM5roqWbJWwHKLJf2MTYdAAD4TAIQQWMB61oqTB2iIQImwFh+p
t1jAXuMlGsVviUCSSXqbfStawKVFscBUcopA3kHKO/YaW8BcJKLm1IqLQMhx
Z8jwalzA78TI/JeQjEDyf6CifVBdwPLhVJJLrI1AgpB8iY2HXsBYVNFH0cKO
QBgpa/9jKl/AmoiD7ZnGj0B3jEO89F5gwKacTYkpcJBA8UpktrmuYMDtVfST
p/OQQH1vKHXNbWHA5jmTro50kUCqckFae/FhwBfc5AhuAJJA1a2k8gg/YsA2
X1Hb7oKSQFgtcxSoCmPAjaBw7WcQk0BIMBGo4F9jwNLCqneClJNA/h+Ztv8a
ZMDID90RBhaUQDaghqFWk2TA9hrC64GilEAo3sW4vjVlwBIHwj2fJZVA9PyY
9venZcBmsXTPtLOVQNkw9CjxRmbAbIYfcTM/lkC4TtRgdpVmwGA85YpTwZZA
Bkpo3EVgZ8CMsF3ka06XQE34bpuEsmfApgXxtSXSl0DVwEIC83RowHKFfJdI
U5hAUkNxS+HwaMB2w7q4Y9+YQCstjbkEdGnAaOITUiBimUBx7aW8vQZqwJK/
HyvV75lAJSFQuyOhasBtxyMU83qaQAuANyhf9GrANrBCdbL8mkCiigDm1nFr
wDdXFBZqiZtAtB6VrsAQbMAm3wAvwwycQLPNbdmQiGzATSWghxSbnEAlK08N
4hxtwCaWN/DOJp1AzDHXXhPKbcDt5+nQKqmdQDc7TyafOm7A7PdO8X42nkCN
tXsWCt1uwNnozol0up5A7TLpGzxIb8COHx33/z+fQMwmAM10BnDAH2LaUw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3587#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {-256.40351581629943`, 
                    0.00001975735157782487}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], True -> GridBox[{{
                  PaneBox[
                   ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "FEBitmaps", "SquareMinusIconMedium"]], 
                    ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                    None, Evaluator -> Automatic, Method -> "Preemptive"], 
                   Alignment -> {Center, Center}, ImageSize -> 
                   Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAghPS5MDFAT9QuLPckrf0Pswin8NA
TUBAL9fLi0bqC8Al/5wwxPxQQJjhkS0FUiHAxnsYgf88WUAk64FUcBYowL9R
i+jlqWBAPv7gdM02MMBbVyAODg1lQKrk0i2g3DTAaGSM9EElaUBSOjiOeoU4
wDVjjtg3lW1AGLjjCyd0PcDH2ygeO/hwQBil+25eZ0HAqwl2MGAAc0AqJT9U
8SpDwG8wjkFmNHVApfbfQ7vNRcDs2hEz8kJ3QM0Lg/xee0fALjB2ZCJHeUA1
mO8zzmZJwFB+pZQzd3tArSGCEIf3S8ArUEClyoF9QM/GA+2Zuk3A5hqmtEK4
f0C7dHtaESdQwDNI9oEv8oBA8oI3QKp+UcDQRM+ZgPWBQOR3rS9OalLA3L0N
McIOg0BhpuuzArpTwMX4gbhGFYRAdM47BD6ZVMAesFu/uzGFQHmLn4uv0lXA
2rwl5gJJhkBM5roqWbJWwHKLJf2MTYdAAD4TAIQQWMB61oqTB2iIQImwFh+p
t1jAXuMlGsVviUCSSXqbfStawKVFscBUcopA3kHKO/YaW8BcJKLm1IqLQMhx
Z8jwalzA78TI/JeQjEDyf6CifVBdwPLhVJJLrI1AgpB8iY2HXsBYVNFH0cKO
QBgpa/9jKl/AmoiD7ZnGj0B3jEO89F5gwKacTYkpcJBA8UpktrmuYMDtVfST
p/OQQH1vKHXNbWHA5jmTro50kUCqckFae/FhwBfc5AhuAJJA1a2k8gg/YsA2
X1Hb7oKSQFgtcxSoCmPAjaBw7WcQk0BIMBGo4F9jwNLCqneClJNA/h+Ztv8a
ZMDID90RBhaUQDaghqFWk2TA9hrC64GilEAo3sW4vjVlwBIHwj2fJZVA9PyY
9venZcBmsXTPtLOVQNkw9CjxRmbAbIYfcTM/lkC4TtRgdpVmwGA85YpTwZZA
Bkpo3EVgZ8CMsF3ka06XQE34bpuEsmfApgXxtSXSl0DVwEIC83RowHKFfJdI
U5hAUkNxS+HwaMB2w7q4Y9+YQCstjbkEdGnAaOITUiBimUBx7aW8vQZqwJK/
HyvV75lAJSFQuyOhasBtxyMU83qaQAuANyhf9GrANrBCdbL8mkCiigDm1nFr
wDdXFBZqiZtAtB6VrsAQbMAm3wAvwwycQLPNbdmQiGzATSWghxSbnEAlK08N
4hxtwCaWN/DOJp1AzDHXXhPKbcDt5+nQKqmdQDc7TyafOm7A7PdO8X42nkCN
tXsWCt1uwNnozol0up5A7TLpGzxIb8COHx33/z+fQMwmAM10BnDAH2LaUw==

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3587#1"]& ]}}, {}, {}}, {
                   DisplayFunction -> Identity, 
                    Ticks -> {Automatic, Automatic}, AxesOrigin -> {0, 0}, 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, DisplayFunction -> Identity, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 1, 
                    Axes -> {False, False}, AxesLabel -> {None, None}, 
                    AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                    Frame -> {{True, True}, {True, True}}, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    FrameTicks -> {{None, None}, {None, None}}, 
                    GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                    Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                    Method -> {
                    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                    AbsolutePointSize[6], "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                    (
                    Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
                    PlotRange -> {{0., 2000.}, {-256.40351581629943`, 
                    0.00001975735157782487}}, PlotRangeClipping -> True, 
                    PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                  GridBox[{{
                    RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "2000.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                    RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
                   AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    ShowStringCharacters -> False, NumberMarks -> False, 
                    PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
                GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}]}, 
             Dynamic[Typeset`open$$], ImageSize -> Automatic], 
            BaselinePosition -> Baseline], DynamicModuleValues :> {}], 
          StyleBox["]", "NonInterpretableSummary"]}]},
       "CopyTag",
       DisplayFunction->(#& ),
       InterpretationFunction->("InterpolatingFunction[{{0., 2000.}}, <>]"& )],
      False,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.806330760164853*^9, 3.806330769205164*^9}, 
   3.80633095007344*^9, 3.806331036667156*^9, 3.8063312071547337`*^9, 
   3.8063313121841173`*^9, 3.8063314579226017`*^9, 3.806331728285866*^9, 
   3.8063323486138563`*^9, 3.806332429699791*^9, {3.806332478426489*^9, 
   3.806332498211526*^9}, 3.806332538180114*^9, 3.806332735981245*^9, 
   3.8063328581087008`*^9, 3.806332964165016*^9, 3.806333080446342*^9, 
   3.806333227505033*^9, {3.806366147129512*^9, 3.8063661668845377`*^9}, {
   3.806366323529807*^9, 3.806366344119821*^9}, 3.8063669323305798`*^9, 
   3.806367642053034*^9, 3.806368467131922*^9, 3.8063685317916517`*^9, 
   3.806396312785221*^9, {3.8063963459594316`*^9, 3.806396359517062*^9}, 
   3.806399812286685*^9, {3.806399952261861*^9, 3.8063999803282137`*^9}, 
   3.806400211428624*^9, 3.806402848956045*^9, 3.8067677443143806`*^9, 
   3.806768015332512*^9, 3.8067682820707693`*^9, 3.806768586025482*^9, 
   3.806768617141274*^9, 3.80677083032652*^9, {3.8067710403353024`*^9, 
   3.806771060160059*^9}, 3.806771198991413*^9, 3.806771277696875*^9, {
   3.8067713214742823`*^9, 3.80677132972574*^9}, {3.80677139039531*^9, 
   3.8067714159433613`*^9}, {3.806771666259959*^9, 3.8067716813606653`*^9}, 
   3.8067717885557203`*^9, 3.806771857238841*^9, {3.806772435237216*^9, 
   3.806772439362485*^9}, 3.806773885531336*^9, 3.8067745157243977`*^9, 
   3.8067746669840803`*^9, 3.806774712342803*^9, 3.806775216628414*^9, 
   3.806775292355208*^9, 3.806775477347193*^9, 3.806775817267968*^9, 
   3.806775951392168*^9, 3.806776103499015*^9, 3.806776600609112*^9, 
   3.80677665400106*^9, 3.8067767093728952`*^9, 3.806777833789115*^9, 
   3.8067779340198393`*^9, 3.806778079169764*^9, 3.806917770544042*^9, {
   3.806917805919702*^9, 3.806917815748797*^9}, 3.80691821423307*^9, 
   3.806918868272831*^9, 3.806918926675152*^9, 3.80691909707887*^9, 
   3.8069316420283203`*^9, 3.8069317774348793`*^9, {3.806931833013282*^9, 
   3.8069318596281757`*^9}, 3.806931918156763*^9, {3.806931978811322*^9, 
   3.80693200090086*^9}, {3.806932034306191*^9, 3.8069320663221607`*^9}, {
   3.807191764703586*^9, 3.807191782112658*^9}, 3.807191824183731*^9, 
   3.807191861635336*^9, 3.80722330204907*^9, 3.807224403704974*^9, 
   3.807224535486025*^9, 3.807224624212921*^9, {3.80722468041223*^9, 
   3.80722469428378*^9}, 3.80722477678714*^9, 3.8072402729276457`*^9, 
   3.807240422558914*^9, 3.807240525825659*^9, {3.8072484937011642`*^9, 
   3.807248500774042*^9}, 3.807248852128036*^9, 3.807248968764269*^9, {
   3.8072499611438837`*^9, 3.8072499679760942`*^9}, 3.807250002714995*^9, {
   3.8072505178936653`*^9, 3.807250522857538*^9}, 3.8072506184225597`*^9, 
   3.807250648903675*^9, 3.807250708087367*^9, 3.807257581489193*^9, 
   3.807267291471294*^9, 3.807267321498692*^9, 3.807267402060298*^9, 
   3.8072676145633383`*^9, {3.807267712840455*^9, 3.807267735551338*^9}, {
   3.807267770210576*^9, 3.807267798955144*^9}, 3.807267834748761*^9, 
   3.807267917553481*^9, 3.807267967759323*^9, 3.807268670397316*^9, 
   3.807268796013246*^9, 3.807268952730578*^9, 3.807269001448263*^9, 
   3.807269034641184*^9, {3.8072690945463247`*^9, 3.8072691336700373`*^9}, 
   3.807269179444165*^9, {3.807269327686865*^9, 3.8072693522943363`*^9}, 
   3.807269393571806*^9, {3.8072694569991407`*^9, 3.807269469462634*^9}, 
   3.807269563326459*^9, 3.807269978653555*^9, 3.807270201911841*^9, 
   3.807270308462397*^9, 3.807274711309828*^9, 3.807275032657076*^9, 
   3.807275163111822*^9, 3.80727521979025*^9, {3.807275288164152*^9, 
   3.807275297692587*^9}, 3.807280154360478*^9, 3.807280835325471*^9, 
   3.807282384225132*^9, 3.808641003873006*^9, 3.808642557377904*^9, 
   3.8086427427643433`*^9, 3.80864575212882*^9, 3.808647085234263*^9, 
   3.808647236224819*^9, 3.8086472936186047`*^9, 3.8086499504252987`*^9, 
   3.80864998368707*^9, 3.8086922852638206`*^9, 3.808692374041794*^9, 
   3.8086955080409117`*^9, 3.808695960541205*^9, 3.808696443965434*^9, 
   3.808698238623424*^9, 3.808698789352919*^9, 3.80869919019536*^9, 
   3.808705372184444*^9, 3.808705443225771*^9, 3.808705596016693*^9, 
   3.808714315703409*^9, 3.808795269309826*^9, 3.808796901317563*^9, 
   3.808797300419753*^9, 3.808797491639331*^9, 3.808797956727743*^9, 
   3.808798181909996*^9, 3.80879907217633*^9, 3.809329534286237*^9, 
   3.8093297843466587`*^9, {3.809329968787849*^9, 3.809329980721242*^9}, 
   3.810537893396283*^9, 3.8140626914450073`*^9, 3.8140653032038517`*^9, 
   3.8140658580473347`*^9, 3.81453144889787*^9, 3.814531611653455*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"thob1", "=", 
   RowBox[{"N", "[", "0.8", "]"}]}], ";", 
  RowBox[{"phob1", "=", "0"}], ";", 
  RowBox[{"hplus11", "=", 
   RowBox[{"hplus1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"th", "\[Rule]", "thob1"}], ",", 
      RowBox[{"vp", "\[Rule]", "phob1"}], ",", 
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";", 
  RowBox[{"hcross11", "=", 
   RowBox[{"hcross1", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"th", "\[Rule]", "thob1"}], ",", 
      RowBox[{"vp", "\[Rule]", "phob1"}], ",", 
      RowBox[{"al", "\[Rule]", 
       RowBox[{"alf", "[", "t", "]"}]}], ",", 
      RowBox[{"be", "\[Rule]", 
       RowBox[{"bef", "[", "t", "]"}]}], ",", 
      RowBox[{"ga", "\[Rule]", 
       RowBox[{"gaf", "[", "t", "]"}]}], ",", 
      RowBox[{"aldot", "\[Rule]", 
       RowBox[{
        RowBox[{"alf", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"bedot", "\[Rule]", 
       RowBox[{
        RowBox[{"bef", "'"}], "[", "t", "]"}]}], ",", 
      RowBox[{"gadot", "\[Rule]", 
       RowBox[{
        RowBox[{"gaf", "'"}], "[", "t", "]"}]}]}], "}"}]}]}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.8093070124607162`*^9, 3.809307021792067*^9}, {
   3.809307320485355*^9, 3.809307327557287*^9}, {3.809307368454111*^9, 
   3.809307421414991*^9}, {3.809307456231229*^9, 3.809307491496353*^9}, {
   3.809307793050288*^9, 3.809307881423506*^9}, {3.809307970814014*^9, 
   3.8093079712289658`*^9}, {3.809310204739987*^9, 3.8093102057134333`*^9}, {
   3.809321768528857*^9, 3.809321770399076*^9}, {3.809322004143523*^9, 
   3.8093220097273893`*^9}, {3.809322547693658*^9, 3.809322554093666*^9}, {
   3.8105315127174807`*^9, 3.810531601965548*^9}, {3.810531635630632*^9, 
   3.8105316457421417`*^9}, {3.8105318585252237`*^9, 
   3.8105318628945227`*^9}, {3.810532055641116*^9, 3.8105320565992393`*^9}, {
   3.8105333361351757`*^9, 3.8105333484063*^9}, 3.810533399178166*^9, 
   3.810533475687516*^9, {3.810538419624338*^9, 3.810538451733553*^9}, {
   3.8105387473531857`*^9, 3.810538766040227*^9}, {3.8140627778589354`*^9, 
   3.814062778243793*^9}, {3.814062811847946*^9, 3.8140628158426657`*^9}, {
   3.814531474298522*^9, 3.814531474834941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"hplus11", "/.", 
      RowBox[{"solal", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8093075600439777`*^9, 3.809307595689596*^9}, {
   3.809309485984098*^9, 3.8093094871354713`*^9}, {3.810532069494588*^9, 
   3.810532086822987*^9}, {3.810533203818377*^9, 3.810533271367942*^9}, {
   3.8105333652711267`*^9, 3.810533424501692*^9}, {3.810538404122106*^9, 
   3.810538411660838*^9}, {3.8140628235772743`*^9, 3.814062824862726*^9}, {
   3.8140628625409603`*^9, 3.814062863172968*^9}, {3.814062916721303*^9, 
   3.8140629172612057`*^9}, {3.814063918215354*^9, 3.814063918673512*^9}, {
   3.81406606832513*^9, 3.814066068673122*^9}, {3.814066115176921*^9, 
   3.814066115878482*^9}, {3.814066176390238*^9, 3.814066184332963*^9}, {
   3.814066235620201*^9, 3.81406626333037*^9}, {3.814066311699562*^9, 
   3.8140663119515944`*^9}, {3.8140663526184273`*^9, 3.814066356636972*^9}, 
   3.814066404425241*^9, {3.81406644809999*^9, 3.814066448660036*^9}, {
   3.8140664906554937`*^9, 3.814066491004097*^9}, {3.814066552163156*^9, 
   3.8140665533217897`*^9}, 3.8145314972830963`*^9, {3.814531689865992*^9, 
   3.8145316939302473`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], 
      Dashing[{Small, Small}], LineBox[CompressedData["
1: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
fanGtTPii//+MUDm5l9byulq/D+SnfEM
       "]]},
     Annotation[#, "Charting`Private`Tag$4008#1"]& ], 
    TagBox[
     {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
      LineBox[CompressedData["
1:eJwUV3c81e8XNyJ7bzKuLSmSJPWcQmVUFGmIUnZmFCX5IlR2VlZEGdmudV0e
LpWQXWbRsvcos37399fndV7nfM55v9/nPM/rPFLWruds6GhoaBQZaWj+/031
s2ZUvZl8tMPTZz5QuBw39UgamUv6oGW6ofIEoXL8711doKTkY3TxSdC7Hv5y
zBFTUczSH4PUeiRMNbnLcWp9uASD5HN0f0f77g8s5Vh5/mbEP7sXqPsb8n5A
V46/cKT93ep7iZrpnwtfWSNimdfMGhubrxBHUKC+zQwR3zri5fxHIhfZOu8J
TfpKxGW9o1krOvlo9PZerq12It5wMhpetCtC49KO35/UEnE67fDjP3ol6C3+
QXsqj4h1P0bL/u4rRWeWfA4fiCPiicSTDSsORPS3Svb1eT8iDru5bbG8WY42
7flHsmyIuGfTPnZBohol9HkljasQ8Z334vvmS0hIc4aSPcxFxCLPeltndcjI
TEhDm22xDFsrAf20HUaTli9vyOSXYbrNex0rvvXo4yuVNu6QMtw7arZrRa8B
ecTLB+tcK8Pe+azVS30UxC85y/2QvQwbxIwxLqU3oiaKVn7Et1Is5t1guujQ
hFSSLU/PlZXiep27C/Obb5GwPP3lvPOleOfQd/lZiQ9I7GSJ/t2HJbi/vtZr
ZuIDCla0N7Q7UYLzXic2Tpe0oFjLp2pNrCX4jMcZqymdNqTv9iL9U3Qxjmcm
xY/bdaA7ROm/WYJFmHjXwOO2UCdSIgbK64cX4pSpg8LLvlR72PwvJ00hdunk
sVvS60K/tycL9nzJxzwpzXSLfd1IUSy7t+1OHt7kqMh10+5BRGHrtZzPufjn
f5nGC+k9aO5789Pt/bm4ws4vbd6hFy0p0pscHc/Gl/era81tfkL0p1pGXFVf
4YyWF+7TEgOoxSP5ixlOwyuJ5UojYQPozlRR2iehVHzCrvVH9/oAimo6q2bo
koxn6P+YkXoGUcTT8yq57IlY88gZrcchwyg4zmf6KCEadxZt0cnPjyDvEwp9
owRb/LBF2UDV6gdSk9/K59xIQjkllXJv4n4gUrBN7cynFNSdeJxetu0HmjC0
jWgtTkMydhfJQod+Ihdjo3AP1QzUQh+kQsP7C/H9HP+9PJCFBI4M8XS8G0Os
vmfYDy69QSBjO39qewyR356+fbE9HzmwLrZS9o+jRxsa3/NzChB5gPFRRfo4
8v8mppBmXoSs76j9Sb03gVrysvZpnSlBhUWPh26pTKGUr5fe+F4koimeqTCD
61PIp7F8LKaAiOTvGBxViJ1Cnno+QVdoy1G6NmvGj/Up1Hrb0GY8qxzFfAiz
vfx2GhX/3eSSH6pA7cqzgppr04hIf4fALluJWKNOf+DfPYOCPtz+7uJciYIu
cCh3Rc2gnx5qA0/XK9GdH5GLJy1mUadNnb3f3ypUemLhpWzkLOIL6WCMPVyN
5nONTekps+jMzZillTvVyN6Nu7JOfg691Lr/ImCiGmX1uNunXJ5DLkXwPEuc
hL5pdAvfC59D0eY8l7bOkdDl7RjfA8tzyLT41G/NChKKv7a8h1duHk3F6bHy
/SKhnsbzIwsX51HKQsgFbp4aZPSE73h+3Tz6lnjU45ptDQqd9Vx+vDiPrAcU
nuaG1yDrHMfu/TwLiKNM3IG+rAa9YG0N5NZbQLHX7l0Y+FODjh65b+FvuYCu
vc8tPi1IRsMuuw/M311AiX+v2zWqk9G99CF2y+gFtMZzcFvDmIyEup+OteUt
oH6vZpFXDmRUQa+NDzctoFs9hEiW/8jI9MBMQt6XBdR+SsT4ZjwZLdmmuAn/
WUDnllPuFeWSUXSikX4o1yL6KNB+ZpJERvtatqT+KC6ioDuOspwtZNS+mb9h
o7OILLwvhor3kdGtPVd7ei0WEZ0ekyL/dzJisWLP17mziGjfyowsTJFRTlRt
UGnkItLufZVTtEhGJyjOV6VyF5FZ3Jfcs7/J6OfyLo0oyiJi2/Lf07FGRoGy
7Rz/hhaR+3JxlvI6GRHM/cadVxeR/ihDue0fMqoPVakf5lhCPi4XZXyXyciS
9DXRUGEJiaeLfXKaJaOt6Qh30rElxHhj5pP6LzJK2oUMFK8soc7S6uufB8lI
8+w8IdFzCRWmroycbSejz/4vNhkjllCbzquf6ZiMvErP9nplL6Hvsz77PhSS
qefkX/7Pemo+MrG4OZmMSvmLH50fXEIKB8JvvwgmI+OT1ywpy1Q8CuMZp13J
aM6b66Aq+zIa9RyN6jEjo7C8es50uWX0k2zYqKpFpt5DbhMcsIz4hjIm7cXI
yA51PZ/xWEb63x9U2gzWIJqXv0lDT5eRleju9xMVNShxh9hwS9Yy6hY/FmwZ
XYOaP9iK535eRmSKcYs81KBrymEocX6Z2p9P/n58NWgtouRaCNMKGj6reql9
jIQUTLde2mitIDOV5sLrj0iovkKqyfT8CrrWfKQi14SELgqf/KVzawVlPNhe
WhYlodCv0fKEtBV0Pmkl8nleNZqwl8//SruKqj42T94vrkL+rUYfP4qsIhtR
nnE55yokpOIxR96/itqU6VRm5avQqWXyvmSbVfTCk7VuMKES5T44V27+YRXd
k8kOyb9egY6P3v184vsqkv/O+jSTswINHk/9c2BzFTUcPi3UX1OOWJgmDvHt
+Y0KTVlt2TnLkWPMg7rOqN/o0Vi6xeGMMkS3+nIE5/5Gb+y/5BYdK0NJ5s00
RZTfyIMwfydstBS1iPHqhK/8RoZ2JP8E4VK0Ozvnvf7FP8gm4Cpdpk8xmqnp
6aRIrKFZoeXvXXO5yOWX4g9i4TqacnpLb+Ydi0YtB5gaPqwjw0rSc03NGHS+
P1Tl48911DoxPXp4KhJpto77/BLZQKw3bvEZfAxG9CWvuARCNhCTmoKOtst1
lOgrdfSu1Say2NKW/vU4CjfwCj8/xLWNtmTrxWK+5GH18OY6vd3baObQ1dK5
v2/wa0bvnyYntlFUQNhningBDlv/vNfRdxvZ8gY7u18qwhdGYt8lTWwjR4pc
k9xwCZ7K41rZrP+LKig68QP0FdhCpl6YafgvCmqqo2kOqMAdqa6I789flP5c
44sWTSUmRrU/Ud7zD93FLwIDf1fih3fCpK4+/4eWtos3/DqqMYtUkPyIJg38
IJoxBCrV4mbt6L1+ejTwdNNK81FwLQ6+mHZw1zkaSIguelA5WovpoqpOXnGi
gfaeYI6YyDq88XfGri+VBmSxU7/jZ4yrRDZc7+TRQERA03oKdz2+o7HTm7+S
BsjzXcX0B+vxkrNU6PlOGggTydZo9KvH08NmOR10tFCbOXCzgbYB561ZF7tw
0oKWx6vUPokGbM/nVsUuRrUnQov6tRvwT8MnzYYHaKGDnS0j5nYDfmmX0Dl1
jBY+X/I/eTK8AV8LzOp/fIYWgt/SFH591YCHSXUT7+1ogZf5R15BTwNO+ty6
YOtJC7oreS3fJhrwxaX+NYb/aKGN2aNocasBC3CM0bwKp4WRw7IZQ5wU3Ku4
zKSbRAtbVkUn06QoOEaPhvvHa1r4FLhHT1ONgo2vswsHlNFC2eso15xjFMzx
QERKqp4WbooSnGfPUnBborxifRstaHCFKDNepeAnRHVVqwFakHNInlm0p+BT
nccO/f1FC8bZDa5FtymYcebMsdQlWmBwKf135AEFN+200Nf+RwtJ9id5Ux9R
cIC0g8kQKx2Yq0SVtYZRMKA7l+4J0QE9/23vDzEU/Pdy4HVhWTog+eT8jUug
YPKdKIcqVTpILTet3pdMwfdiUt3Nj9KB29Muz+epFKxZmOfz24AOzr2vXO5I
o+DfHyr/izOngyvXVaR7qTbxV9Nj9Zt0sGhCv/GKGu9B2x3d40YH0RK7HfWo
+fbtGnnu8YAOCL+qW0up9eY0ZzK4n9BB0OpugzkqngLT9dzieDo4OJkkuEbF
e8uNsfRsJh0EiBM/dVL5KIXxkuaK6CB+uG7Zm8p3IluSEk6mg8O3zywvUPV4
3binRfkDHTBdDn19yIGCb45odbd+ooMwX5n356l6EjZPDjp+p4NE9fTdYEzB
aWrWUzmbdFBHW1v+jNofizOuSyeZ6OGVsKbINrV/Io6+G2N89BC06MZ0hIuC
4zPiWWRV6OG84h3BE5MN2LQ2k6dJix6atRo4eXobMM9AsciNk/Sw9sHMhFTb
gCO4WpUyrtGDgPLuO6+p81Z9cFf5GRd6WLR9lV3tTp1PS1e0dZ8e3jVHNfmZ
NuDDBbym5gn0INdlsa4g0IBte22+7nhFD3Z1l715V+txzGalfWkp9f8xneek
7no8oW/xgL2dHr4V/ZsweFKP+dwLd9YMUeN1Zy9p3azHKJEmxn6SHuJTpRaX
tOtx/FjW68YdOyCpr68p6RPGOoGzHT6Hd4CKDT2LsHsddslDl+X1d0DyiXkB
U546nNQV/bP3wg7w8vK8crWkFi9IaKzv9dgB+/rKVbcmyDiN7EcYy9kB1qJX
la+hGry2yul1ToABms6GOKxFVWLpXdb//kkzgLXnyLPrvJX4jC7xcYEqA/wO
UU1Ti63Ar2IupjGdZoBrRn0TB6PL8bm9Ge/rAhnga5/SH8Z7ZbjAXk1k9yID
DL8VKE2RKsTWQ6aYvo0RmocexX19EY9Zkr85uw8wguW3sr8iurG49LKL2MgY
Iwy005kyT0Rj+sEQHxLtTtBoZdrlbfUEZ/WT9rsf3AmSZ9f5SLtc8NgnyZyv
L3fCwqnDuovF4SgiruCCUfFO8M2r2tVNiEYaZloMpNqdcPip2uVQx2copPe8
dVz/TiAvScdfWExACj3BYkYcTHDA7pNGu1M6cuyciar2YQIe9fKakIUcxBPl
g+RDmKB1PNT05u9cRDrLOBcbywSGV3J/Ja/nIdYOCUO3Iia4obH1r/1PPsr/
eI5B/hcThOsduJViX4xMw0fKYpeYQPvQxYr5kWK0ZXTLmo6GGXp2DjJlm5Wg
022P8BcRZlASu9IooV2K5lqqfGKNmeFncPUp05UyFP9ET4HOkhmiFX7d/XaV
iI4adH92dWKGuEuqzTFviSjyw/R+w2BmCKqx2dCNLEf7msXnaMnMUCj74Lo8
ayXqD3mT4vqBGRzjPgOfTSXyP6lp+OUzMwQPVIovkCtR5zuTnKpFZvBRDsy8
aluF3N8GWbvKs8Ds6cMa3i+qkfjPE4y/97MAW5ujpfuPatRKx5znCyzw8eb6
rXuyJCQL4YuPL7HAy4Yw/cJMEuq2PBvHZcsCsgF7/bpHSOjhA+5DCR4soLUa
d3NduAYNkOL8s56yQCJM5euE1qDgAXOZ3YksMMVs/fI6uQbtXxNuLsligcVa
T/e7czUo/EAaJ66l1o8/ePs/IzLSMr1WptfCAoKy4m7u3mQ07kEwb/vMAkKn
dYeMX5LRseLXaQPzLMDxlnCob566n7XbH7+2xQItsVO77/PWouRZpbExJlZw
dQ4JZzpQi06xzT525mcFtkZ58DOtRatKRXtWpFihaKHbcMi9Fr3Ud++6p8IK
LCkJI+Lhteis/X4v2sOscFTPzuTU61q0FbwqFHqSFWKuq4mb19ai3FeVZA5T
Vni9vWPKoLsWXWjyuRZ3jRUWHu3yl/5Vi+h/HN4h5swKQw7nu0dXa1Ex7d/s
lz6sYGCmuhawow5dlaw3VAxmhcVdg3tZuOsQCwqYL4phBdLViS93ROtQ5VXd
ZxovWIHnhVv4B+k6dNOX8WDtG1a4oPV3nk6pDnEnNw/qVLHC1+7gL9Iqdaiu
+olfSxMrkEPNzu/ZV4ec+o0IJl2scP6kuKck1Rb6w/Gu7wsrJK6bhP7dU4fe
8nc5WE5RbaX67WbFOuSh/oz9128q/5sP7f6j1pM4b1biRM8Gw2WdDxSpeNrc
Bc2WONlAXerPrkauOuQTNbDmLcYGlpEB+sZUPnJFySn/FNigzHK3XA+Vb8/H
qxB8gA3qdNu3T1P18J+R+Ml2nA32iqofbaTqtYf1e8izM2wQMzXqfaCuFg0q
Zu0WucIG0Y++Wmdn16KQU7Yd6XZsYP3eqVc0shZ9ezQlUOjPBl7uxleELtai
iKx8kno4GxS3nvj4+lAtOtzoYlnznA0GXewe6grXojia5VfNpdR6CUFdNd1k
dFyiXP8sZoP5v15DKflkNH/k7uynVjbgEo1bSw4iI/37m+o/frIBn4vZyx17
yej389p+h0U20LZ89vwOLRllVj30XdimxjNEeQt216DtVfqmbQF2ONq2JLzm
XINK3NjOC+mzwxniOpEURUJtSbw+BRfYQVefvofDmITGmkReHL/JDmGHK4Zc
2ElIRFhx+tZDdhhUJwa5BFSjoAa9wIZydhggnSIcvFCF0qaNci80skOwSI47
kbEKVfGbdkx3soPIH4m/3uWVaNbBWlRghh3SvZs3/rBXogs8D8scCRxwcVTf
v/xNOXLTDh74t5cDmmOt286fLUdPbMP/xR7hAG3p0BrfRSLCpGRDfJED2s9d
ORWjSkQKN6p+8EZyALkeTbVmlKKNskXe2k0OCGJWCvaPK0R8X9cOnWPmhEPD
PMNdFQVIhYnm2rgAJ9BvJao6fs5HNyw48rnVOCGHrXqjnusNatuxW9fWnhO+
lk9/1/HMRmlmNz05P3HCVn/XQcyUjjLuO03tM+eCBc3111eRFdpXz7wWcpUL
aD4XeDjuUkb1O3IYRm5wgaRGh/WqxEU8Gv5TMtyNCyYu1XKR3t7G4ulXzScf
c4HLr+5SK/cQnNR0timDzAW/XBWfSH9MxErMc11rFC6weGW+Nnk9CVefDhs5
+4ELZp+K0R5ZTsb9n5s3tj9xwYkC/jk+1hdYYPKY6uV5Lng5x5+sGfwSx7Cr
p/EQuIEh5uwGk0QOJpzrfuOgwA0B1cb2l97n4JJ4t+p6FW64GdopIuqcizsl
CnpdDnPDGeG8S43FeZhDTY611ZQbJgIe9DsIFuC0O01ChCvcoH9zMI8hrwDv
qbGW87nODWqCh5RIhwqxke6LY/Iu3PAz/NqErnERfnJByDswhBsczTmnHfKL
sUhyxaPBcG7IjainfTZZjHNHTJ+pxnKDcoEXt7RsCW62jy4cSeeGrj0tKXYJ
JfhiwV6yRjY3/DoyI8PXXoLHFz9+CC/ghtHxKCxIX4oZ77P8OkziBu+7e57z
25fieJyzFFPPDVo0P4eZEkux7I6TNFPvuCHsJsMRvXelWDc8UDSxh8pncm91
2K4y3NslpTg/wA16K6v90SfK8A2Beo0To9ywc5pjV69zGQ54sWWyMsMNG0Pq
fgyVZdh4X5X77mVuUOx4fUK/vwyLN9yOtl7nBrbTMse7/5ThGZO9Jc//cYP/
22jbNH4iJn2f6uxk4IHX5WnNb1SJOPT264WdbDxg3fotec2QiC/ssOZCPDyQ
d2tZLfAmES/JDpwtEOeB/c7+MYZRRFxfEev6U4YHEl3YU4IziTjipHGk6G4e
qGWpmF4nErFFP2vROVUe+Ip83LKaiFjJ4X3744M8EBdapPmom4jX1gPm6o/w
QCXfiHvyVyJ+9+Qox5oOD7TeF3cYmyDiWNGNPXsNeMCmUPqpzSIRW+eXn7Y1
5oELp41uCq0R8b4j7s6pF6j1rbLS/24R8d+PyuG9FjwQajvNKkRTjtssJ/JZ
b/DARntC9E3acpw0n9l23IEHIur6tX9S/fb+VjM+rjxw5nC8ZsJfItbgFmUr
8eKBlXzXjgcbRLzj5efdE/d5YLC8yilxhYi71WIMJQJ4INLaM2F8hojTG087
XQjlgQrJE1tOP4jYxZT5aXgED7RF7rgh10/E2r+a8ppieYBnT0uZYCsRs9zx
b9lM4oFoJYXfQCbifkbtKbUMHnAxEjLJfEPErxP+MDtm80CT9QwLPCdiT4Uy
xYwCHjAS1X4s9IiIj1W7UNvKA3MKXcYqrkTMYaDkwEniAQEczRBoTsTDg79C
T9RT+2Xp4Ch0lIi9tyyaiW08IHw4coqNkYhPhAtNTHfzgLH/mKzbeBnmE+/d
KT3AA+eeKZuIvS/DxcjwZPQvHjCQfct46b8y7NfJaNc8zQO/T+hmzl0pw0bX
KcH/Fql4j+mb9qmX4YmAQ++c//JAytLotYJvpVjynbyegSAvjBw4H02RL8Vz
F37c/G8XL4Atu/OJ1RJMHk8LqpLmhb1etPsONlDPD7NAk9w+Xii6rXrXxbQE
Rxnt0KHX5wUn7xvOmfbF2PILttY6ywv/Pl7dta1YjJVd7ge4m/ECc/hjpQ89
Rbg5cqlh5DovcJN+x31tKcQ0PaNAvscLSSa7J1cS8nHQZF3Gvf94YWrVMHDq
zxvMTJNKdyiUFw4/uGT92fQN5tlzqak8jhe+mxRINDPkYdmQrpNFxbxgxLsx
mamXjQ0OU868HOMFFz+19BCDDPwsM9Mi9BwfxF4ab9u97IeFSP/VnrjEB8PL
ww1lo3dxSqeVOMM1Prjo2xA8/84Nv94WHf3PmQ/SLwlP1PzTwVXmsTfuh/KB
9lpn7WWDe2iY9ZGjSx0fZCrvHJvjikNynrbepkr8wLKJ1x7l5aA9WiPnX+zj
B53pyjJ/z1ykTnNx75QGP0xOCA7zHclDx8P0xx7q8EOTzQunDx/eIMssZdM3
Fvywx+fap+yOQhTfu7SXLpIfjH70q35GpSg1yYn1dBw/sDPc7/8dV4qyrv0c
S0jmh0dd5L7JqVJUOvMpdU8OP1yTWrqlFF2G2ndUs15q4Ie1OSGO8+1E9KlF
dTzzPT+EloUK6oiUo+GoPMrcR35QsbBLab9ZjqbEUnyCBvlhoXfzWNpqOWI4
8HC8aJkfSmtZTNwYKhHb5h/Kxjo/BG/wzz/Vq0Q8DW5pejQCECFyoZc7qBJJ
nrY2G2ITgG8Rgw16W5VInndonxyvADiGPiufOFCFVAbOs7kLC0C5rteHEecq
pG2j18goJwBt4k8ul/dXIZ3ddWkmygLAvybx6jFrNTJY1LiXoiYANUJf36Rq
V6OLDxRU1ZAAFEHQJ/fn1chKJ4PtgZ4AeP6WJCm8rUa2zCIT7w0F4J6DyAjb
fDXyjGN9cfWiAGgK32szPEJC968E3cuxFACm3/HmaddJKEBq22z5pgAEuEnk
sgeR0ONxL9WjTgKgQ7RYjcsioaiCObbH7gLgajkUvb+RhBJu20303BWA/Jr8
5e/UfT7t0GijuB8VL39EefoGCb36d/GFQxAV32e2eAfeGpT/tuse8YkAGDgy
3dVSqkFlTw0u/IsSgHiLsatcqAaRTBpVDRIE4HhA/e0JkxrUIKjNHpcqALEK
4Qz11jWo+QtxYiRTAGavHQuKda9BHZl7mpTyBODt3dmgG3416LPD6xdexQKQ
8KanXulxDfqyV+J+fYUAdB/y4Z+IrkE/VxMusNYKAIvRVvDzxBr08tj+218a
BWB1TwDz49QaZBXeHlnUIgALD1ANW3oNEhtwyP+vSwCqVpnyCFR7UIbhw/l+
AfDnuiLygRqf6Jb+S3ZEAD70+of8pea7QD5Mt/ZLAHzX8jIbqPX4mPrEW2YE
QDLxjzk39T3Tdd7jcMqyAGhQHJtm7tegiBfsF102BGBCsh+dp+6DRtM5nkAr
CKV8dea6FjWI5aBuNA+TIFzhKGnHp6j8A0YKfnIIQuygSvxbNer7qP1eSwW/
ILj/dRsxE6lBOiIC46FigsCIWvjc/5EQjW0J/RVpQRCfd+4T/E5CdSVGknuU
BOHe8o5/BhQS8t0e1/63TxC8B9Wfs6aT0CH9wEtdBwXBIk148vJ9EiKOVsd4
6QnCUF5S4xslEvJQNis6aSQIc+bpy8V/q9Fe74VW4fOCYL1gxW/UWY3yOOUZ
6q4JAk/vnXenb1Uj+ysUqSg7Qep5syqp1qhGstlXj1q7CIIn9td597cKpR+N
vcvoKwg9W0Xe7SFVKMGZdupMgiBcNhwdoPOrRKbVKYxSaYKgRZHjGDxAPV8M
mtLLWYJQbPYy0X26AkWkuFgklApCosOZvNWzFSiodah95KMgrL/WODrxl4iO
C96dLukVBCsJDTvzV0T0z5qHKWhIEPw8kxfL9Ino3sapYwqTghCdbedzNqwM
uSlWlLntEIKTfXrSPeslSMXLpPM4qxDMJyq2ukSVoOn6mRk+HiGQdp1zVJUt
QbYXpeWqJYSgVHy53lC/GF0NiUqkPSwEfwyiRvzX85HBL8cHMe5CIDRsPCer
+gqdeCCdr+stBE3P7R8Y7ctCx/mHB3/7CcH37H2naPZkIi2905pXwoRAZyIg
0koiAym92rssnS0E8fuMNtx6nyNWmxX78mEh8Hz3zf/pG3/U9vOBaf9JYVhc
URqy50/Bzb4agU/OCEOQfu8ZW6s03MQ3X6JtJgwPc16FmZqmY7LuNc4Ma2Hg
2ziZLZHyEudnHW9xeCAML59uSR2RzsbhN3fCZqkwXHIV42/eoO6TW9iloFoY
qpy2fO1CinFwrHeqVb0wdDG5hz3kKsF+TZMbjR+FYbTQ70S9RCl2kWkrD5sQ
ho7ATdpT1P3rzM+o3eLiItAY8+XFiEAVbtv9s9dCRgS0K48uCz6qwoa3D/ol
K4lA7ON147nFKnyK7mun0EEReLB+3sPsfTU+Lrn7Dq+xCNA9T3+0/1oNrrfz
kzh3QQT8zBMggFKDUVFXc5SFCNTzbQ6oSpOx9lFvUQ4HEbiuvhyXMELGByze
1jMFiID11XACWacOEzOFHE+GioDAD+dt48Q6rDbtxBscIQJHrk8Lck/XYZV7
PLb0ySJwc9ppz8YTjPMbbDiPZ4gAjUrGbcF+jHczV1f5Z4vArw69L5nc9Vgh
0Yr1b5kI+LKo649dqsevR0qJ2iQRiHqV1/HEtx7LyjNa3q8XgTOjqUEqafWY
UJFfvNZG5Su6e8vuaz0W6103W/4lAm3PzFJvnGvASaKn/6nOUOu5JgaQbzVg
4RvpOW5LIqCxM8aKLrgBCyyd2Jz9KwKWNNP9RuUNOPZQUpYygygI3T3+53Rr
A+b9b/a0E6soaFkX56qPNmAurtj0CUFRULgtaZ3PSMER5uP68uKikCdtka0l
RMHsL7SWbWREwcHJhpSjQMFhY+EpWUqicJevU2b1IAWzqHzT+7FPFPIN1qvF
T1BwqJf6vNRBUShslgiXOU/BjLUhideOiIJf6bdEBisKDtoxdOyFjijsMH3X
Ve9AwfRGKtNf9EVhoUbRxOw2BQc8+y9WzFgU4u94OFDuUzDNUO+RKxdE4cl8
rvPOQAr2IyiMP7cQhYn/ZvOkH1PwlsP9qH5rUVj797xBIIKC75W0HxJ0EAWR
nHsCo9EUvL4m9cPMVRQ83qffeBhLwd7gFRbrJQpbm5IBK3EU/Duk+UDPfVFg
rN6rgOIp2LNDdIQ7QBTMLTnPWFH9ywKuocahoiB4WW/G9BkFe1hSVCMjROGe
6XseySgKXnjFP/QxVhSUKSF/6p9SsMusfRBbsiiM/RXuORhMwbPq5D2GGaKg
G/tnIughBd/y5ex7nC0KjQzVvTl3KXiq0dq/uUAU6rK3xjJdKFgiut8xgigK
amFyPWE3KNjU8oyZaY0o3H6teUTEnIIf725CIhRqvWxdmtP6FFy3dkhptJnK
Nyj7jJwWFe/bIr7XHaJw4YHW5WxFClZ4JvvP6bModN4atesSpOCYPdy9f36I
QvVj1hi5hQb8fiO4rnZKFEw0ab6YDjbgrfdbOYGLorD88PFrtcYGbGs98YDz
nyjQKf24sCO6ASfvtbT/xCAGjgPcFlteDbhzq+dcMpsYfD9IK5B/qQEfTsDy
8iJikJrwWVB7VwN2u3mAZ1ZSDFi8Gyyktqnzr/pmq1ReDLpCVE81D9Vjrrb4
rqMHxEDb1VvPNq4e/6RxuX/BWAzMbsq/vbWCsXD7DxsxczEYjjpd9ycd4zPJ
l4y/XxWD0J7RtoOGGFcd0JN1cRID9afH+5ap5zXMUazjUbAY+Nvqa6iI1OKG
gzHVhuFi0NxRpre/nIx/72DK4o4Vg3Q7G5vdZ8j42otl79QMMXhdSRAWvFeD
1XtbCOVkKr7+WfdPpGr85YjPnZ9LYhAQmO90YKIc87DOX8tbFwM+rh6vBtty
fKr/pqEbzS4wa9P8PUh9D5V6GEtuse+CPFKu77eBMhycLd/Cq7gLLnNvO7tV
lGAV7s+7dKx2QcbA6YN0d/PwWPhYQJzNLuitrJZfu5GLU1n+jI877QLd2qMl
r87mYLYdQqVh3rvgBr1lsZf0azz1+9KJz9G7AA0Nl3HiDPxq+IuLQ9MuOMOe
6EpbFI3Fcn7hSEVxYNERPxTeEY16ZX7LfN8rDjxJk9wHNp+hpxmMT9Q1xOH4
mzdfH8nEo40kedOB49T4PtkHYa5JqD/cYYJgIQ7JwzUHYtwz0LPbs1wVEeJw
epXm3LOoXGSwsO3FFCcOrx+zXtz/NA/ROXMMXU4Wh+Z9+83CA98gN9u9r/5l
i8NWgn6cinMBOnPJ/ZB+gzgwXvXQ1YguRixo9frwsjg8vRp8+Cs9EXkfU2Cq
2BAHWlcIp/EkojGdK4WRtBJA9+TsJZ3vREQ51bBxnFMCIgUNn7JUl6N758Kf
5SpJQHxIWnnLmUo0YVp/KFBVAtqThGZEiirRBfPlEQtNCejje1NozF6F1Cwu
KXOdkIDlCee/5xqr0LSN7Ns716n5zS9bM/GT0GX7i07G9hLQ/KnmysANEmp2
fMqt5CoBM8qyGteLSSjLdfHqF18JkG39zBxwvAbxeMjsqAyUALIPTcP/9zV/
T/O8qCcS8K4rpF+vtQZZ+NT+1kmUgDwrx9UnBmTUcn8hZdcLCVitXrePDSYj
TT9pnT+vJKAzI4B/fz0Z8QU+jswrkwCBFznHpJVrUcAj8oEgkgTUzRz54mJZ
ixZC5oeuNkjA+0ePp3QialFbmJkCd4cEJJlenfMfq0VakaHtU58kwKbVs+In
Rx3Kia7xbBqWgESBw7Ef1OuQQOycSNoPCfj7qGx9z8U6FBQv1XB3SgJeSGtG
cfnUoaVEUzuTRQnozszVdEuoQ9eSQ9h3r1HxMLqxGJXVofZUUtmOfxLAkPHj
XGZbHRLv/K08TycJtz+djPf6UYfMTLhoLBglod6XGEn5U4fCuhV7mpklwfqh
rOoTZowaz+u8PsAuCfvcAzLbhDDa6LXwecklCamSu088kcVI9cIdI04+Sfj3
tqigcS9G9n2REr6CkpDGtZblcxCjFxdzlyZEJKE3hqhcoI3R5wHKWzNxSShY
QPetEEbsV4YTKVKS0DcUuBVNtXWHV532ykpCt1WnyYkjGN2/yolSFCTBfVXE
xE8To9KvCjzMypJgezF7h7YqRpNWx3957ZUELmaON//JYyT57UrVdzVJ8Ez+
W2EiipG5tdfTsxqSIPaMtqOQDaOIHxGW5EOSkO68/2PyZh16ezNHVfGIJDD6
PqkTnahDW78adsSDJEQ27/uu2l2H9tsN9dHpSoKwe17ut+o65Dixkud6UhJ0
vXSrVF7UoQwHDr9hA0nYsq3+LhZQh/qn5E30z0gCh0inSrF1HTo5e/kPwUwS
Luw31OgTq0NpfIE9Dy9KQnSDvrDyn1q0cvhN0fAVSZDKeCh8uqMWpT/ZtIu3
loR+19LzjD616HeJtO6yjSScY65yyDGoRacHDCWNHSSB5R23qZJILdqQT+ln
dpOEHV8mFX+UkpHx2Sai7W1JsHHdrS3rS0av78xENd6h9i/Wx+WqDhmdf6ut
/+CBJCTqUPY2U+c93/pL9cITav5H564ffEtCdE8Y4k9HSIK2zbHnA34kdLFk
j0deNLV/rYIVrzRIiIHGT+lmoiQIXLCS7k+vRpap4sl9rySh2Ywlz/NaFeLq
t/Ktq5eEzrahx/bPypHtv5CLok2SoBl3POrY/nJElitW934vCWThbyZNXUTk
4EUzq9ouCXPFBqlTLNT7gifj6qshSdikNBCqXEqR5+nvR8N+SwLfYvbtncyF
qJ9yk/ayshSITBq6ZRPT0MKxQZEHe6UgQ33yOfdyCtrZcFY9XU0KxjVN2jhV
k5EG1rIb05QCR0LtN8P8BBRbw/XRQ08KggXFvS9lRqGzRHLiU0spiFUffyoR
YINs96uVFl6XgvQpUw/68TPIrzS7teumFEhynJrQ23kK5xfH/BV0kgK2hcjV
89lumKXA/mbWXSlokjucSffhEX73im9fbZQUDMaflDT6koC/yjzRH30mBQJO
R0R9XZ7j1cx/1vQJUhDwiK75wFYSlnk5FaefKgVHPGuf97Gl4YC0+s1PuVLw
0acnef5fBk7apcG/ni8FYdEFPmrVL3FJyhsVsWIpoMng8j3rlolHk+KvW1dI
Addei6RffVn4aMKt93MUKXAx/BW1+2k2viDwfZT7nRTcf+pEGVfNwc5x5hvq
H6Rg4bTov12fc3DKs+N77ndIQc1F7Z1tAnl4I1Lo2c5hKdA8GLGP1jsf83BG
5CuNSMHVV4mGVswFWDGC/t3p71JQrHvX+UdCAb4YNrf2bEIKhpuvZx7ML8Tl
oU2WkqtSoPRowDn0YjHOMWgVClmTgnA2+wtXkopxElt39+ymFMjIh5wyHyzG
/lEjJ2roCCC/0vy4wrQE3z43RkNgJECAjJolV2QJtuWbJYUyE4Bt/7WT/u9L
sFHihsoFLgLcPuYuF61WitFl2kkyLwHUNhunFW1KsZoYU6a0IAFkRoxsmuNK
sWA6v+DiLgLcyA//uXOxFLNYi3WZSxHgzq5ttpeiZXhLWvppnQwB9nET96rr
lmHqO+3f090EWHz7MFA9sgx/cjhYvaRCgMwYedXUkjLcvPvo7UtqBOA42te9
1FWGSbO6e+oPEMD7Tjff/oUyXFBkOC53iACJYdkdV9iION39XEa4NgEmZ8yY
nOSIOGb/pSsriMrvk/uC5VEifrRqxX9FhwALOnpjB0yJ2LvStqPhBAHchOY8
5+yI2MnH+bGCAQFmnXxMQ3yI2PKwp07kaQJ08G05/AslYuPte9urxgRI18l6
bxZPxDr4v0oLUwLsOq6X/ziDiDX+C3VvNCfAp6ZrgUl5RKygE7lb6QoBdGVf
/wopIWJRhvhfUZYEyJDbTjSpIGKO9ykv/lwnQK7xk6g/VURM+zjzkqUNAXZ4
Fs/4VBPxikEe71t7ApSf59zsryTiMbaSj7tvEUDK9aEGP5GIB9orQ2JcCdAy
znJybyERt0XVHVv3IADxwQ9ahddEXHfu7abVHQJUpJo50KQQcQlfW/k7HwKc
9q3Kr44k4qzP3a57HhBA7sxFBbP/iDghcUAx1p8A9in4Zq8bET+5PPpjI5AA
pK++AocsidhXbDz1eggBxhWzxR/pE7Hr11nz5icEuCpLekJSI2Lr9BXuvREE
eG3rETskTMSm1putcdEEYPz2OmPqbxnWGmOCG4kE+CFuf+gLpQzvyeHc+JBM
gKn9Lx3fZZRhSUcB4r4XBLDVMpnJ8SvDDHPSCn9fEaB5tInFTq0MrxUpfb+Z
S50f17BsfeYyPOWumtKaT4CiY8yx+7+W4s7Vo1zPywiwEdSisCegFDdW6rX8
qyDAc4X3EnompbjCxyjIlkSAqJwj9F7ipTh5+9La/gaqPq8vLKqUUeefwWu0
vZ0AV/oqf8W+K8YiEh/6NrsIwMXfs+Pw02LcrrmrQ+ETAbJcX01dPlOMNW69
rQ0YovLH978dSC/CjD38yRoTBKCRHM4xCirAr9IrzNJopSHvGm2PSksOvkhi
Od26QxqW79dZP5On7qu9lrprO6Wh3FFZJjkgG3vu3Ln/HIc0dL5lon+v+hrr
uphzMYpKw7SQzaNtr0z88/Bai7O6NNhXnoir0EnGiWZGlKSD0rCbVb3NDz/H
Rq7p1e+1pEGIdt1PXzMRE1+eypE6Jg1y1q/vWEnF4SDm548+nZYG4nO30k+5
4Vim7xAcsZOG0XjOf3ldV/ENj/vlbEnSoLRf5823nESkofa1XDFVGsQYRCKv
nkhCLEtQcSJdGj62RLG1fk9Gxe6Mlf6vpUE8xX7fpuALtOUWXbVSKg2mjwmu
IlUvUbxrds1wqzT8e0BI0Piagxz2spDX26Xhep/plkBqLtKev0UW6JYGcvEj
ea/LeeiHi1qtcb80XCp0l3bpfIP2udTWNf2k5o+/+qcwuxB9uNXTkL8tDQPb
uSbnNktQirIG5QONDNyrj/mtbViK3GYSKWP0MnBH0eDY8vNSJHDLslGSRQaS
BZTUc/aXIWunyaZYARmwTzD49sCciA7sNnpbIiwDB/v3PuJMJSKm6cK37WIy
8Oq8Wu2hb0RU5Oj5jklaBvYfvvkP2ZQj6i3w3nevDNzlNHzmfqUCdShaNz9X
kwGgKWOQjatALyebmisOyEDp3oJinY8VSN/hyYeFwzIwdVtrukCzEokpzn5g
RzKg7BhtMe9UiRYmzrYoHZeBmD0fW0JSK1G8PX/rzVMyoKVyNT5vsxI5KHi3
/mcoA/NSgxW7FaqQ9sRga9oZGRjzOmGxeK4KfbdLb+s3lYHXgscZD2VWoXJ5
+o+r5jJw9H0ZLm2uQqHjNh95rsjA42Oe9tdmqtBeu93tRtdlwJPrnv4plWr0
1UHCteCmDBi0fL+2eqYahd3i5eKwl4GWndj7tnM10nLdWeLiJAML2csmdY+r
0aT7pkmHiwxwsjN87cqsRome80t7PWRAgfcB5NVUoxN3fzyL8pIBNVOfJp2u
arTi06e+6C0DjJ/Qr6Sf1SjTt/WTia8MWE7+PpO/Wo3OPcR3Sh/KQLkhzYjn
DhKiCSgT5A2UgaDvulmLXCRUGJRddTtYBrz13UckREnoakjypd7HMhCsLU2/
TSAhtieRG+rhMhDGzkQMViAhUlhgclwUFe/5mWbSbhKyj7yr/fuZDIxe4T6V
oExCgjFOXy4kUP2Cn+xFqP53sVZ+lUlU/6G4pOPyJOSZcF5CKE0GLNBNfw4p
EiIknaz3zpCByf19C75CJNSVcvj6QBZ1nh73rIaxk5D/i710Wjky8OPY6bYj
NCSk8lI6M+mNDIj3rf6IWKhGw1mCupuFMrBy49vXh1+r0dNs1l9XSmXg/beB
JK4Wqr55/x6Ry2XA+hKn4rGyajSRvyy3q1oGOEqVW7iTqlF80fj7B2QZOL4u
8DvArxrplQ7Zf8UywF3/+ErcNaq+xA5m1CgDcpvJI/pQjV5WNua9eCcDilIq
qRm7qtE/8puZax9loHo17xB0VaFC/CK8oVMGEnlirj7JrkIWlGcqhF4Z8G/g
O+R3vwpVv7/v9mNQBormHN85iVUh+xZXbt2vVH1556wcJyuRwMcbpVnfZGDp
QJSfGLES3e42XLGZoM6XwOf72ccrEeETins3LQPttTAVzFiJOvv2a8jPy0Cu
ymka+eYKtOeLqPfEqgx4PLgQXKVbgcbHpzcd6WVhjhOOJUqXo/ipkZRWRlmQ
vHw8b+kTEenO9hxRZpGFtovbZNVgIspYqnk4yyULDz3OV94eLUNXtp/Su4nL
wlG5Kkqebynq4FFm9TokC5x0uV+0ygrRUWfnyWRtWXjurbpKM1mACt8Xvqcg
WXDk2X2tX7QARfiqBnGdkIVssewvC95vkNGYxvabc7JwsPpzjTFPDmqpPjb/
3UkWNlqDJtvb09Hba+Y9xmmyMCrYZmakYoHUaxJL7mbIgv9nmvnmveo4i38w
Mi1LFmjMCYfa9t3AQS0WRjN5spBoIBzsYHYPH1e3fhtSKQvEpiGrXPoIXL/T
ubKuUxaqHzQs+y28wDWFAcnK9HJwtFlZW0y3GDMamYkkMMrBWKYA8532Ymwy
Kf+clkUOoqq+Hx01L8Hj0h/jP3PJQZabycVKu1LM+1wwxl9cDmiUSC3i96j7
i8YU17SUHBhTGD2KN4k4t4ccaSYrB9fu8fut3C/HiMM6XElZDpzuF7fYeldg
p8D80N5DVPv8YEOtVRWukHy4Ex2Rg8nXY+NvPlVh2jqT4FyQg4s5Bayr+tU4
Ye13oN9JOZi/MTDtsoeEG52PPVQwk4P/DjIGTnytwRysfH9jLsrBffNO39gT
ZHwpZ8x3+4ociC+6lRvlk/H896f3uq3lIIJ0rLPWvRaLXvzs5esmB8w7hVbf
/KjDtqs5K2O35UBuxii8UQvjkpj7t03uygHT9jo5MxLjkx8l3eX85KCyRNbp
jHA9jnFcno/6Tw6a+Pl6z0M9/rLznctmkBzsNXnlpWJbj28fd7rV+VQO7I1a
iWaF9bhu5Mi0VqQceBjN1iV31mPmB1yOr2LkoI9bdjZ3sR6/qCy3u/dcDmLL
UQbPvgY8ZRo69jNFDrovr5nZnW7AB5Yu25xNl4OPQvrPvB0acKsyzQ2ZbDl4
87j/+bvUBizQ0v0tIk8OEn+xx/4tb8DX7V5dWy+QA54nSh6TbQ04f4f3yI0S
OVglyjI8+t6A/2QYWLYT5YDA4ni843cDPo52fdGskgMBt5IT75gpOHx4/kpm
jRwU6hca2otScL8PZZAdU/UifEst203B0oJxl7wpVD2PrmW+1qJgF6Jd//e3
cuAf9O0XOkXB1SZa5qc/yMF4x9IeP1MK3jHP9rmyTQ5crea+W1lR8NmwEVNC
pxw4B6o9+WlPwUmKpT1hPXLw69NoHYs7Bf96F3Tuz2c5KDW3Cuu6S8H7bpp3
XR+UA5dHwoGaDyj4Pq2ScdsXOVAKz9w++h8Fj+my9st9o87fl23RoUAKNg6d
sfrvJ3X+GOpiCI8omNT6cXxoXA60WR/u4afaMpxFrhrT1H4N5ZJKqfER56L+
RM3JgR4S19r0p+C1OPeH04ty4Jld3TDnS8HWA+d2nliVg3fnd/mFU/G0ialH
pq/JwVTGWnOfGwVrXOMX3NyUA4lcdY52Kp/0zN9pZv/kwLTA64MblS/LeJ9c
MZ08qFBEc+upengpVReyMMqD/UMHtzqqXqPOSRo2zPKwEBM/73iYgg1K7tdh
NnmoYKHTeq9MweKaR9s9eeVBLjjU4RkrBYfel7jQISAPFiM04wzrDXipjuar
oog8DMpm0ez51YDf6zXOfpWUh+OVPcUvqhuw2uMsr0My8sDt8y5mLqMBp7Q9
2n4mLw+2mPvXWmgDdjt/il1fRR4ShX5XnjzfgAfjFeMyVeXh79UsmyiNBqw7
yLLrr7o8vJPlXUwRasDC1z8qlx2m5lsr+MsyUI8pLueMdunLwzTHY5NAw3qs
XLq/966RPIQ6uRHUZOtx/CqfRfdZebgdXVDjuYmxk2+fU8gFeVgZzvF6fwFj
vicWTxdvyMOH1WTG+aVa7PfxCK+RnTzcad3Dmhpbiye4JJJfO8oDV0Q2ywH1
Wlyb8C3virs8CGqLTR9zJmPbV7Ytb/3k4fVgkXzxexLunDh5TjJAHuZonjBE
XCJhLWXFwXuP5MGl4VV+wmQ15iybntwbJg9h8RGG53ZU46p6N+ak5/Kwj32X
g61sJWYZvnfKhSgPSuuHUJB4Gda4m8seWSkPY7H/mZSml+LrPP3dRSR5ECkN
tOuSKsVVpw5cXayXBzH/qxEMUtT9vnze3fOjPGxF5j68r1CIGyJuJt8bk4cy
NnJ58ZtX2PvYmblgIQVQeD8q0XjQH2cN+5ZliypA51f6BPuou7jj7hvvZnEF
WNEvGBi1ccZyhUz0LLIKUK/9biWT4RTqEWkUDFdVAJ+A3sD9uwKRysrBY88M
FGDnN7qj974koV+vpWJf+CpA/6c/Y8deFaCZoG/r9P4KIJYT/WHpTSFass6w
sg9UAM5E69RPRUWIRkJqt+oTBTC4tN/Po68YiSRIUigJCjCTWxTJ01SKpLxG
5eWTFYCslSi793AZUjifHv40TQHSzwxopxSXoQOckpdMXynAjoO3/E/EE5Fx
iMTCr1IF0Cg+pbNhWIHMbUbMDCoUwJ7RnFhFrECWOi9qCqsV4Ihj5GaoaCVy
+icecrdeAdw/Dfw4/qMSBd8VF2duV4DluNB31y5Xo3Czr4HOXQpwJb7aYbG0
GsXuT5vs6lUAQ+I95WvMJJQxv6s8aUgBNLUYshuKSIhst8tIeVIBPHg/69N9
r0GNel9KomYUIFo/1W5BgYxapFMFV+cVIH/Z8kOsMxn1jYj9qP1N5XtFnn9h
noy+1g6fImwowOjp01df7KlFP5NTCoO3FaBwyPL1qn0tWjIXu3d2hyIc33gv
9aS/Fq0fGB4p26kIxTcUTlDY6hANX4qeEKsi3GnnN4k7WofYO0W5v3Erwj2m
Gk265DrEVzh0R49fETpKnLIT3tYhkbDk4VwhRWgyPyCBZ+uQwinRHA8JRfBw
5fSv1cBor9wQex9BEe4S0+OjzTHS2JF8+7CcIrhd3OJa8sJI+/vlgReKipCk
uYvpazRGOvUiaMceRZBu1/tg+gYjg7TBLPt9ipD1Ov6TGQUjY98klo/7FeHD
YvTo6GeMzC9fdlM9qAiTL9K6VicwstQU+RynpQjILb8xdg0jG4HBwxtHFCFE
IoZuhK4e3Vp5nmF5TBFIT+ZZDzHVI4/uSzsbdRVB6eHT/ots9cinWNhZ/pQi
/L6dMXyUsx75Rwx0PzVUBPLKf6+muepR8K3nmgtnqPwEkwasuOtRuMGlNNNz
ihBlFq6ZQvXHKgjvqDZTBKN54eQMjnpkYSmX/eOiIkgkPx4pZq1HMrH7DTgs
FEGLubKzdGc9mvkAs5pWijBYWX0ph4qP+O901A1rRWC6+N+CzDpGvgeu7I+w
UYTEOy7eP6cw0nWy/1xlrwgu9txR0YMYsWV4+fxwUoTe2aF0lWaMej8HiHG4
KkK+Q6ZmXRlGKWxRWNOD2s8UO2adVIxuHk+1vuGlCIaT/JM4CCNl7zyGCG9F
OKGo33XQEaOVgsqcqvuKMLrW+LXgNEbkH02GP/wU4ZPwurHsXoyChLvn2AMU
ISFA5EkGB0a8j2bUb4QqAv4c9KjifR0aJK33hT9VBK7jPysuZNShlwuM96si
FMFnmxTG4lOH1CykGtjjFCGG29ijllCHNqJVbmomUvUPMFhvWqlFlPeHd95I
VoQdSzk8i0216Nz+C6erMhThnerkqQ9WtUjE4cbC9yxFyLuRNOCnVIu+p7k9
Y8+h6nU9+IfTMhl5sDwdsC5UBLWwg4k0/mQU8w3bsNcowq13YWdzgmrQZcGP
TJp1isAjFJ+Rf6wGEU4PvrFuUITNUc5a3m0SKq1aWax8rwhSKpF0BFcS6o5U
9LPupeqXmXBkivp+4D76LL5yltpvn6ZLPekVqP92+qHvC4rw62KlzfaJCpSe
WzDMtkLtJ+tk6fJ0OdrH30yw3lCECpMXJ63VypHxzFYh204lsGYeTxEsLUNR
Sbbvr0sqwcuO9ZKEwGJ0907AbV9pJaBrEe5VECtGlufSJBLklIDHz+4Tt30R
Umb5fLdNWQlaXK5BbmMB+uCjp3DwkBIcP+C89PNWHqK7JPOY7ZwScHX9OawV
l4m8BL8bVAZS8/X5q78rDEYWy9u/u4KVwCVl1fPe4UCk2yGcOfNYCdLeNkst
xj5EPCEmm1JRSsDIubMpbNQdFf6ufxOWogSelJKCWW9rPPHpBZt1uRK0u9Nk
TM9H4I6SmirfKiVQOZ/UasYdjSvC+24m1CiB993/NVzm8VR1URhu0GhM0mdo
luLO5wiJ9kqmUJooU4YkIpUhiiRJiEIlGswyT/del0z7ukRRKhRJo5RUUigk
vvPn/p2z17vWu561z9nXc6uz43GYoXTNozp1+BYRbM1puY5XlQUf1WpVh2qX
5b8bvtzCNtfsWyU+q8NNSZ36gPIMrMxbqOQxoA5/07yfTPlm4rfPyg8//K4O
zz9v8e9gZWEXadmZ4SPqsNu64KXGnbvYK6qRnJ5Jg4GN1fu3WuZidq5PiP0c
GkwbP5Sp/ZuLh5tWPq6aTwO0f5+9UkoeDpgT6BogTYO9O2SUzXvycWgIK+mn
Mg3yFLbv02EVYYOUnj6LlTQQJM6aHVRVhOfVRhJFa2iwsvGXsYFBMY7+29ty
RJ0GXolKYqlrS/AOxbj/HjJocDB78d9ilxK8aOPmQ+s4NDh9Zqj0R1oJTjiZ
ONWrRYPH4HPqm3wp3n/d0Ex/Ew3cMqfGUneUYiX+rxupm2lA93om7xtWilN/
mnPsDWnwu68Puw6UYmeZiTNVJjTINF4xHqzIxSqs7GYFcxrcHpVlZJtwca7n
TJcXu2lwyCQ4TTGFiz0vFZVoWNFgn+7BFw5NXMzMs/0Xb02DnqR3gznfuXjo
wXzTn3Y0WNdqaD68iIe5n8sSLBxpcM6k8pSuBg/7zj3YW3iQylfFnR66l4e1
1sqwJQ7ToH1T3laRNw9XOx95+OAoDY6Sc3+q5fJw8Lml8utO0GBc75/Cjjoe
3pLa4HzBlwZFfsGPD3XysBg+UdzrTwPe30f42Fcebny9fHJLIA0WOSx9euQf
D0dMtpikBtNA4VvMfCtJPjZTOnV96hwN3uqcTGYr8bGUjuoHuws08Pk6+HNc
lY+f7m9nVkVQ9VkNR5ey+TjePyRQIZoGvrc3q+zT5mPLBMYD/ys0+OuScWNA
j4//K+uWexFPg+A0qV8eW/i4u/2ik0YCDS5cu+j+Sp+Pb//SKIpPokHJEobD
RmrtsOjDxNBtGoAE2yEc8fFq9hVji1QaBCq2rKzX4eOPO3SvFWZQfvpohQ+R
fHz36Jd34tk0COtMvi1N42P36ATGkTwacHIX3l61ko/p+VtPPyikQezqnZ/X
LebjwYdDjaqlNGhLGBdXEePjkv47iy/waVAqoouWDvOwzzwzx95yGiyu6Poq
9o76f1Mdo44pym+i5ur3Zh4eM8gaT6mlQV/8vcF2Hg8HVaWcb6ij4msUlAfc
5uEZxE3JLw1UP4za+53O8/C8FVdWES00yNJP37fQnIejrkfmW7VSfL+N297K
4GEpibANgc+oeuWmlN5J8rD8eMC2hk5qnrpPzB97wMU3j/m093fTwLHZ+cXs
TC5e9umoveQbihcd8x63MxSP7c4nrD7SIF6J2GxG42Ky0Dypf4gGQvr1W099
SrFgjfEayRHKjxcXrorpl2Kdm1sKOX9osGcRUiqSKsX6FzXrTv+jQWt3mrp3
Rgne6bTyi8RCOtSprdc+erIYd3Qq+nAk6UDYhWst+1uE9+9Y8s9Shg4aW6O0
poOKsMOmhYtS5Okg97E3JySgEHstGdHmrKGD2kzV6ESLfPzr0qDIUpUOsa8W
Wf2uzcN+s76Yn1ajQ4d+jHI3LQ8H/XjtWM+iw4VblpucpnLwpYdNEZa6dDj3
+9qi8ot3cc6ZW12nLOkQNHrM2kYzDff26QeILtKhx3qLWFHEBayf0pqufokO
m8Mjb8eph+LU/TaP4y/TwfFfbP/9uDP4QMuJ1Qev08HNlvuEHDqGu0tSH83O
oEPJCdu6gQFX1BY4tdKwlg7btlwsa8qLRZwNUWaFdXR4k0l75HMwHsUOLjm5
5D4dQmKy1O2VrqEdToyWvhY6NL8vctOPuIGajez8wl/SoX/ro5q2XclItKjy
YdMIHVaVX/wmLcxCq1oMR1hjdHj+Ty+sKPouCgl7tjzxLx1cFfrMsvZlo81/
+n3cZjHApePrLvP+HFTZs3T5AhkG/GsJpNv/ykcKCRkmJxYzoPJyf3hScQEK
sGD5vJRnwETKL5WrRwqRpsjoQe4yBogn7D7l87IIcbP9vE1pDOhp4UX4PCpB
i5xm3uEyGWC2IeMidb9AxxVjmhQJBhiUS4gYvqWIGZOp/FWbAQ/ynsQtl+ei
PO/2xktGDDi2TvXUDWMeWkB3+Dm8jQHJVdn+Q1d4yK1vQMluOwP23l4/fecF
D6nun3WCvpcBB91vru06wEfpehylx04MiH/y4cWEdRkS7Vh4/q8LA+yywurs
Y8vQB4feATU3BhR72hoq3i9Da0KvV4Z7UfEk4wej1ATI4KrX6rITDPgTce6B
hrUAuWQaR/X6MkDlzO+7ay4KUGbjuDUEMqC54AWn5rUANXS21XkFM0A4tubK
gbnl6GN/vtqdcwxw2pa6h2CUIxXxA+PjFxlwzVTznYNfOTJQ1nJaf4kBBT/F
XEoTypELQ+ah1WUGvEt/1qgiKEdZFqJE3jUG5KuULnX+UY4aHW/N+HCDAYEc
ZqfKggr06YSvm8wtBmxUr/zv78oKNPf89qebkxnwaeB9ynvNCqR6TVX7aBoD
PBSb9z43rUBGWdMptzIZMJlsZNBuV4FcBV3zmrMpf+s/p3R5VqDwptJjY3kM
MGH8q/lwugLd7YrqVC1iQPsSL+Uf4RWo8ctBZFnKgI81LKe/sZT+hG72eT4D
RkU1e+ckUfoS8tLcckp/Ee3zwpQKtG7Zj5PvKhmQe9mJvTCjApkwH7yRqmXA
2Fqd4zOzKpAbSjPSq2PAZu0LUj8yK1DEztNFHg0M8I6ZfetZegXKcdojf7OJ
AQckdz7OTq5AD7zpwQ+aqf5qPwg7nliB+s/P+fT7McWn/ItmdSqf+dffbF/7
jAGtXfTW5xcq0Pq75WV7OhgQeTy/7/gpSr88dlloJwMShsrj/x6h9B+4Xyjp
ZkDAo1nn/Gwo/Zf639+8ZkChpmb4G+MKlDugZCn5ngFrF8WnaZIVqPnvSPWm
jwxIMXT9e0a5Ag1ItKoc+cwAhwVn3/NnV6CFy7OjEwcYwIre/fhVfzlSZ4WM
NH5ngOe7DpfhlnJkCtZ2o0MMsF3R7D9ZUI6O7CIa1oxQPFQsn/5zqRzl+Xy8
GjLBgP/6epe2bC1HzWE1f4v+UX5M2zlnKZejgesJB1/PYMJUZ0O2/7AA0SpM
SJ15TEjmr7URvyVA5g9X3XJbyITqqLX1Tz0EyLN7YtYNSSaoPJRnJugIUMFk
QdvwYibofNGaQ2srQ48kw3VWL2VC+KjKm+mbZejbcof0nYpMUFL9HvTWqQzR
tyzyLlzJhExfoV/LFz4qvOC36DCDCY7180YEH3jom6596AU2EyTr+3Wz7/AQ
fcRgOINkwq7A4ZxnVjyU5yz3/N1GJgh+INO+ei7KQbxEGyMmLH92hB4aWYoy
x4dW7HBgQqu7MqchphB9LOmK9XRmwsyc5CqrJwVojZtw5qVDTDg0f8aLGVIF
KP3Fld4mDyofZKP5ODQPpfCY2VsCmOAml6nOM8tGN496MjfEMaFW5sqbFtdU
1K2yN2XPNSaYl4bZW85IQQo9m2S8bzDhU4h60BzWHZRoKv6r6A4TulmD8VUh
Sej6uryy9XlMEFOT1JcYj0Ox7z/rKtczIeK79N4dz53RRcuDZrNHmZD65187
f20yTrfosTs0xgSN9WL9y1mpuHqbpVfTXyY8NqgdWmuWhn/pGcddmsUCwZm+
CcXQDGynSutcLMOCw6ndrpP92Zj488tZhcYCba0qXpN+Cd7+08M3nMmCppNu
220elmC3rx8v9HNY4G+1qU3KohTfefsip0CbBYZZeWeK93Hx/AeVgxpGLEhp
4p68bMfHbxJDTxs6sWCvakSAGK0Cj8f/vZTtwgJSJuyYd3IFlovxvbPAjQUs
6WnxPTL38LZzrsLHXiyYa7vi/NYf9zDf3XSuVRALrGb48p8lVuEnB+uXVpxl
wegaNFs0VYUH7HXVFM+z4Mr9XKsu52q8YjfT/E0kC9wfKx/cs7YGR+nIxrve
YMFDR8bY1fhanKVxKePBTRY4Xcgqqe+vxUKmWJl6MgtikmUfv9DFeHT1787B
TBaYDw9URLzBWGbZsS87c1jQOESel5AXYvWl/RPcfBa0zb9YW75JiB3Fu5f5
c1kwc/HfltzzQnx6zh7WyzIWxB8tXTqQJcTXp1tg0z0WzPBXOj6jSYibh2sO
TmMW1K7QY2bMqcN93zX9nOpZwLuT0KK2pg7P6C8Or29kwY0uw+HTqA5v6EnL
vfiYBZqDcy57+9ZhGabbWPFTFkBB5olTl+rwt7NM4652FiR2WdscSavDD56N
XJ/RyaK+r/YhWwV1OHNN1cf13SxQflGrOru5Dof4nSN3vab6KeWQlN1Th+2a
jENPvWOBbci+C6zBOizn0bGi+RMLSpOnzvRKivBQ9U2vX19YEMrKnZJQFuFH
Uk41it+pel61HpdTE+Ecx3USW4eo/sherB7TEOEw7ncbj2EWdMSc/VSBRNhR
jJ979TfFW4NS355tIqxrdXqsapwFps+f9T7YJcL/5YDxx0kWqLv+VVhqLcIT
QbPN5s5gQ3Kwc6uegwj3Z7l635zJhgUfvNx0XUT4RevDJOZsNhjN6bOXdRPh
hj/0OpEYG/AkdzM+IsLclbH9VnPZoPHxc5G+pwinbhuW/jqPDffJ9sO3qfVl
byutswvYMPMRe8sjDxEOunXvwGJxNvxzXifb5i7CRxqUw7Ml2LAtbfvXQlcR
3v/9bOEmKTZ4JKY9dHAWYSP53o4n0myIaur5+tlOhDWQ0eTBRWzwi3keZGQl
wqvdcteMybJhTCywN3CHCMvESZhFy7HBzv7iqQhDEZ66d8x7pTwbMvfGtnpu
EuFvH9qS+EvZoORp7qnGFuGX4pp1JgpsYFmiBXiNCDdqJPX3KLIh1v3KAaa8
CPPtJ6VPKFP6zdGmAfNEOD3cQWvOcjbIT13l3/lTh2OLRQeSVrBhVqhORsqn
OhzctTacsYoNO2WKaGc76rDnzMjCutVseJ40EaRXV4dN9lhMflnLBgnX2Bjb
G3VYM4i7JngdG64k3l5UG1KHVbKWmMmqsaEx6lufmDvF559XSTp0NiR4H+k2
1KzDFTfdtC4RbIi26LRvrBfiu/UtB1ZosOH1LHWZoEwhvvaNGc7bwIbmlqRB
lTAhPr55tOOVNhu4L2cttQYhXv/hnDcdseHZxkRxJWuM5cX7koTAhspy8Vl6
CzEW0zCp26vPhhytY5We92rxuwtSMmcM2dDBfnpfXLYWJ6rdKnxsRvXPODL1
W0E1Hhk2yjq/nQ1it0fNCeNqbFH76/ZGCyp/qFnl9rYKz91jGp21mw2pVS3y
jQuqsF/Q+JEz1myw/vWPvcX4Ht79ZN96xmE2fOLbhh08WoaLkmav7HVjQ98m
8YKRAT5e4FK8NOkIG3bwThdLHeZj4djceXO82KAravw3z5aHWasFfT2+bEiP
PUFsIUuxhJ9cRnQoxavTexdT+1zshoQ39cPYYNokLj9M5uD6BZ7xYxfYoG5w
POS/Bdn4dHL9OZdIipffsRPaxZn4S5O3o24sGw5P/Pn4sTsFNyo+W/btDtXv
pKBzEsqR+KwwJtHsHhsexn9jRrYmoYHXwmvjlWxIfGz26JTCbWT1dzg2u5oN
e8d11GOckhFd0yZytpAN54zb1mj7pqGufNXTVY1syE68Ern1UxYibmBbWgcb
tobd65Q6VITu8H/te/mc8tfE2bTfvRjNb1u792InpcebspmvWYLeSkSb93ZT
vH/tLZilUYqiQ/fr3XrPhp9xRLLRch76dPTncvEfbDh5yLKmPFOAdl1SUbo3
xIZd2osGb0qWo+qcfUsP/2KDTWvz7gzfcnS1t0a6fpQNPWniVvP1KhBYR80I
nGRDTV9EpqfgHso/WTO5fooNDUOLH9VJVyL5a0NjL6bZEFK6qnjB4Ur0vdXq
JzGbAxdCr962la5CNw3WfBhYwIFXhx499zeqRnOcrd4kinNg12r+jmeXq9Hx
s5HdRpIcUHkzIfW7oxoZV/5oS5fhAGe3jnKcTQ3idq5+slOWAw71vvemk2rQ
8lHLlqnFHIjwn7dZvbMGjbCq622WcmBE0JOSZVqLHLb/wPMVOCD3FRkPhdSi
5iOrqwWKHIhsPuYxwK9FqVkRfNnlHPBI12v7sAQj8fqqEuEKDiglhTj26GN0
8t1ggdcqDjRrbpsddBSj7UqWWc0qHFi5wnzD3SqMEj8yhbaqHEjd/qDqdQ9G
Hwvnv/q2jgPVa61ni01ixPb/MHpGjQPx6z5KR0sIURBUy0jTOLCvvyFTQlGI
HixIoKXSObDJ3t3rvKoQybUfM+IwOeBuyGUMcYTI8fY2JxGLA60dd8t36wpR
waE1QXs4HNC6t3M4z1CIxpj/Ej4SHPCuyXs5tl2IDMZelPppcMCpL8VP11KI
YutKHs3VpPTRgo9+tkL0Kirq8w0tDux0z9uT5ShEqntdZqlt5MBuEX1Oi4sQ
eS/bvKxShwNfbzuZfT4sRLWflmqb6VLxlv2JnnAXooUlP3f36HGg4cQ9/Tke
QmR1quXoUcSB2kMr/syj1un6WRFTwAE/cwuj2UeEaFD8bMYVfQ7IVMm8+UPF
2/h8f+1KAw68/FR95hOlF5ZMvCw15IB2NuP3Eyqfp4clRvSNOeCllK9WRuWr
zPkk1WHCgbaR1+I3qHrcJrDaIVMOPG3zSD+5Q4j49UkGv804sN7gu5ilkRDN
iPFxuLidA4q0GXaknhCZW20//Z8FBz6ErH4vSwpR4op113N3ckDwX+KbkXVC
6v41o0RnN1XfOovibiUhYnO7m1v2cOBqXH3tfSkhajK4PGPQigO9v1vJg70Y
yUq5KZ3dzwE39vtlHvUYHejcoiljwwHm1xO0qDSMfruPehD2HOA/sK1R2o+R
PvkkvP4AB7LHbBOuszG6PJmTtteRA6FWcZs2zMNI9Ypd58mDHLjj9uLTaFEt
8t6v+WveIWr/quOaKyhea1fJSCa5UuvGNX3BFrXIkl+vX+VO+bMhWG+4vwaF
vVQvmj7GgdJbJmrkvBr0NF3sYewJDkzvfzkU11yNlD3f9K7y4UDA0Z+F26Or
EW8qTsHgJAeiubL7fy6sRh/WjIdFBHGAti5FJ2y0Em3xarJdFMmBUfkFkf/C
KtBE1xejhigOLLqx3rJcrQLxt0oQ/tEcMKhZIfH7UTlSVdg1//UVah6+P7ut
Il2OJBq6+TkJHLBIG3PTPV+GuhQGJSGTA+Zesot3EVx0/L6c0AtT87R88OuX
N1lIna2Vv6qOA7G77ILavmei3pvWCR0iDoT4DksyJzOQ1fFkT51G6jwIt5wT
uzQd6SqtV5j7mAMzxtOY/gm30fwTm7zvdHNgapGt+K+3UShF2Vnl0SilH7Dl
4pTWFaxD0pjOf6j6MyrfvdGMwx3bRrTGxjigPL7zh39rPJ7vH26mMsmBn4bT
FoeGr+Pjz/K8g2YRQLS6/li76DZe2O8TJCtGQKzrHrEHl+/gzCnd8Jw5BEwL
q1jb5qfgLtqTpI75BOzq6e+CP6kYwoeFdGkChjYeCQsXZeDu29XNIhkCfDoF
CT7HMrEv70LHflkCtAS6Rd8VsnDOu6X9YUsIuOc2qGp7+C5etElX+rUSASPF
6d19H3Jwwa45Cj7LCBBKBB8SC8zFRm6tqxesIKDmQmeKtUwePn3dUXPDagL6
Ug70hRD5+MOPMPuY9QQ82u+mUL2nEAfN3XF4jToBQa0rpSM6CrH8sqUn7tEI
UFoa/WnL7iJsapob1sck4FLoueUOBsX4o6P35UA2Afdl1szhVRTjYP9NiYsI
AjryzL4PyJVgbubjfL0NBKwxfzO+4VwJNq9KKGvXJODrAd+n/fwS/OmZA3bX
JmDA2Tpi9FMJVpz+2XZ9EwFPkwutZYxK8Xlr+YnvWwjoqdsdP/mjFC8//nZ2
2FYCDDS9C5jyXFwRniOpaEhAUk24bZYOF3/j6awyMiGgmn9MY38wF4c3z6b1
bCOgXGN7TOwdLl75/pGGtxkBz04dfzmniov3SjmYJO8gYNxjSiZtiIsHVdbv
1thJwIlBe07DfB6O2PTTtnkXAatqlxUvX8HDq3dXHnLcQ0D/Nzv/YpKHq93O
H/u9lwDJmccS/Yx42Oqs+aloKwJeGQxuOb6Ph4euLzm/ej8BCfkrG5NdeTiq
4E10hTUB0s1bEmf48rBKfXbCDlsCVIzOml0/y8Ot9LHMHjuKh9T8p6xIHg5I
MOEdOUCA/czVlVJxlP6MpLoxBwKCGa1TnBs83OL+5Um4EwFyQ0H8pFs87Nu+
8Y3cQQIqxd5IGyXz8HK9qG/pLgQACnPRSuHhB3e7J9iuBOR+6VXxop57y9AW
4MMUb3stPgxQ+5VPBy7d7k5AwLWf5kVU/Pu9LWtfHSHA4UgTeY/S99qurOHu
SYC6RUKYRBQP/1fuqf/nKAE30t6b5YbwsGhlzc4Lxwgoe/qeH+vHw55Rkg6L
TxCQx/Oc3+DGw/Ij9kfTvAm4YOJXYGDDw9i+KJDlS8DDJrW1cqY87NY0FVnj
R0Cgyg85DW0eluVYJJr5E/DvpZnuXRXK75spd18GUPrdT095SvOwq9gQ//Bp
qt83ZjRHjHGxjBfUjwYSIKuuYfzvLRff64x9dv4MAdfDg9Ue3ediiXzOYEoI
AV0pUXGh0VwskAudZIQS8CB+VPHYUS52DG5bWH2eAP+EUBmhORfzdvms6won
QHvLj4s353KxzRjfUSaGAC9vbmP44VIs5jznWPJlar9C+Myvm0pxUYvlGXos
Ac7bDog/lirFM1N+J5lcJaj72oCpQkkJzjHUbg9JIkBwSGnTWVEx3l0c8V7q
FnU+nKG7/NtTjP/+9/LH7dsE/LbfkFj+oQjv+HZK4l4KAe9lZbTFxgrxaHyV
4c8sArgmmgfnzC7AyZPie89mEyCjoZ3mfjYfm7jaOUvmUn6M3R20Gs/Dtzf+
C1YrIKB0Mqjmd18u1n+3ucKJS8CB1h8agRnZOJYhUm+rJcDK+NF0xr10nKNt
uyBUSIDqq9oPZXPSMd468pkjIuCxllxxrUUaHrRWzYq7TwBf/6nkj6oUbBYe
tWLXIwJ05kZE1D9MwnPf7pZ7+pLiZ2KPw2BxFA6M7f33eIQ6b9L3vO0JjETx
t4J6zvwmIOZO2nOfhmiUd3dJFWOMgDHl77a/5sSirmrjgJi/1DycXmIhYXYV
aX7J/2U+i4RZHv6XrjUloaEtvp9bpEn4Ve9b8oTMQPO3SzYGLiIhUS+iZv1Y
Blqx/24mbTEJ3BpNsRlVmWiHV5fTJXkS7r6YtHi96S7Kv6nbY7qMhKrUqXbD
9bnIdVjs2UN1EvRyTf49vlWEDuQZtNrRSVD/2h4QpVGMrJzCWn4wSJh/tvLl
ZHMxMnoyu3EJhwQ7Vnm6a0AJUs2fVeWkRYLHyNxblldK0XJn/YoRbUr/ayqt
7VkpklcILbuoQwJ9VUzlqCwXzb04s6RQj4Sup3InFeK4qM95Rtb4VhKW6lmv
ZQbxUI8CpEcbkqBwU6VFl8dDHU/PpqwwJiFOTl67oZ+HGjZPJxmaklAkxdFe
b8FH1aObb3SZkXAnSzFg4iwf8QuCr3lsJ6Fb9t1LdjEfZSpOXY7bSUL/xWUJ
gvll6PYzvWiV3SSU/6CHTRJl6FrEmcjyPVT8eRurr9qWobDfk+dfW5FgVfzy
fGZ2GQoq1D13fD8Jcy9/SlrSUoZ8XYKCZ9uQcEVMeUHTtzLk0vY3QM2ehL77
Ww+8Uhcgu8hNJ6sPkGD+S/yxprEA7YVAHwtHEk6q782udxIg8z+Vxz84UfU/
Uw0PPi1ABkUTR/0OUn7idhWXOAHSPaTjMf8QCf8qlRxO3BUgDeXTbrdcSYjq
aOVk3BMgevu9Q0w3EiZv+eHfzQKkEjXuXOdOwnGJye3u3QKkvGWj414PEjTk
HhqNfRYgubEA+8+eJNTcbdVMGxYgieIKm9NeJJi9j2p1+idAYq5j+ySPk7DX
Y+K91pxyNKmsbZl6goSAZ8u8VomXo5F2/92kDwmn1wRfVab+V75FlVs0+pJw
xncwbt2ictS75Y+59UkSOkurnwK17h7TNP3mT8Jm7UdvXKn324pPGp89RYJL
3XXvRCpes6vAQDaQBIlU6SMdlJ5o2e8tWUEkjN4806wwJUCVHRuQdjAJmfLH
qw6PCBD3kp9uy1lqf79UZE2/AOXpl208cI7yq4Gbq/hKgNLHRzR/hpIQbfW2
MrhFgG6WaGiEhZGgGNUT8oXyK/6wL2dpOAkbbmh9sqH8jFrOZ+ZdJMH1yo7J
tlgBCn0+TNOLJMG5qHnG7lMCdDqaVHsaRcIp2tWdXQ4C5L3VR/VgNAlNijon
XA0EyLn018rIK1Q+akKpO/MEyDN0z6RpHAmr+v4cNfpQhvz28DslrlK8nym2
CaksQxGjfpdjEyheXas9Cg+WofjGF+67E0m4rlM/lKlRhm7d0DKUu0n10163
fcPsMlS0cfzvjTskoPs2dqwkPqpYaNNpnULVM+OWbbIjH9W9quQqpZHg/kTq
GG8tH3WcCXJPySRhTYMF/W0OD43XTb+4m0/C8sP+z8uuctGsq45ct0LKL7vA
M49MuEjCpS5GvZiErLH8uUV/qXmde96giEvNa8DA5X6bUmRgOpdbdo8Ebxs1
g9bpYrRD6XCMfxXF89vPgVPGxWjftya3jTUkPE+ynE2LLkJHLkeuqBGSUPH1
8SR/fiGKbZOIaWgi4bDey72GHbnoZsZRt/CHJMRI3XWTmspBGb6tW01aSDDa
+LnWUiUHCeRjJ1paKd6dk3C2613UY7PYrf05CQau4Qy3hnS0rldh64deEgrG
jq8Y/nodsfmnl2f2kWDyLelA1furSOfCq/FDn0m49zykX7Y9Dpmvu1PyZYCE
kVeqLIvdl5C3x8rlP3+S8K5gfczxVF8UpHtunDtMQkjALWuYPIwuSH7o8B0l
Qah19LN1iClKLM64NDZGwljw9IqC/Z44PUTscOUECTu91mpLjJ/E+bsO6QdN
khAboXLMufUs5q9uXLZ5igRHK+72+5ZhuHZYdXx6mgSZ/tGZPU0R+H83KB3n

       "]]},
     Annotation[#, "Charting`Private`Tag$4008#2"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.17934487512935982`, 0.1328284843643231}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8093075781668787`*^9, 3.809307610757428*^9, 3.809307979085897*^9, 
   3.80930931575565*^9, {3.809309480401805*^9, 3.809309487762136*^9}, 
   3.8093099502652607`*^9, {3.8093101843515882`*^9, 3.8093102127333527`*^9}, 
   3.8093215950141897`*^9, 3.8093217761484823`*^9, 3.809321914877595*^9, 
   3.8105332056611*^9, {3.810533260192863*^9, 3.810533275720818*^9}, 
   3.810533388202817*^9, 3.810538086194672*^9, {3.8105384122548923`*^9, 
   3.810538454281911*^9}, {3.810538751811088*^9, 3.8105387700620003`*^9}, 
   3.814062910937791*^9, 3.814062971891926*^9, 3.814063970184567*^9, 
   3.814066050811738*^9, 3.8140661034858437`*^9, 3.8140661517401857`*^9, 
   3.81406621449999*^9, 3.814066291782639*^9, 3.8140663351017723`*^9, 
   3.814066387237059*^9, 3.814066431690281*^9, 3.814066479193441*^9, 
   3.81406652373492*^9, 3.814066584408079*^9, 3.814531515096096*^9, 
   3.8145316860371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Evaluate", "[", 
     RowBox[{"hcross11", "/.", 
      RowBox[{"solal", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8105333278466053`*^9, 3.810533329574609*^9}, {
  3.810538104303969*^9, 3.810538104574552*^9}, {3.810538474422081*^9, 
  3.81053847458011*^9}, {3.810538733148732*^9, 3.810538738298609*^9}, {
  3.8140629236202087`*^9, 3.814062940050462*^9}, {3.814064921675747*^9, 
  3.814064922070444*^9}, {3.814066634297412*^9, 3.8140666457132387`*^9}, {
  3.814066716483296*^9, 3.814066716987876*^9}, {3.8145315209789267`*^9, 
  3.8145315211903276`*^9}, {3.814531699815639*^9, 3.814531703954027*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Ft//V+8cdJ8CnOV2t9rF+fhrg/sp3UgBvtuf9hsq8LFBtKrVRBQFijSDa89o
8HGa7QuznBgKTDZ7atGpfPx3o+e+k7EU6B5oHCvQ5WOrcTUk/5ACn899u9tu
xMfsqmbtF/EUMOJCeIYZHy8LukHyS6TAlIIKa+1xPnY5vGGjdhIFcIThayM7
Pq5XblMZSaZAnXJX7yoHPl4/4L0yPZUC5/a19sae4WOf4s3SVo8p8JHFmq5x
4uOuGx2iMhkUKJSscIty5uOtBn5/n2ZSoCoXF8sK7EgZ4uSNJxTY+pFD0j3L
x9+7Or+TcyiwqM82SP40Hxtl3OkbyKXA2aBBl8STfJzuSn7/KJ8CSd9ojFdW
fDyv8779SCEFmHkmBswjfGwtEvxicTEF5O4UkowOCPC9pPFrGIJ6fKAbFYb4
WPZhb8UVJgVY/qcK7mzl4wv2oSVb2BTgrtLpIW/m40aCdu7HUgqYHzsb9//3
eo2pz2mx5QK+0GWXvKV87MsLjzepoEB/VJKI959a/O0D78FsJQV4LQ+8bL/V
Yss/vyKzqymgmH5BTKyrFhO1bUIW8Sgw0RbzpbS4Fj80Dw8sqaVAjqj8dn5C
LRZx493+7ykFhh025aT41+Ku/I1eVfWC8+Es7ms9XIv1n1t7nmsUxLv/gStB
uxYXDd5zV3whqKfE9xH/KdfiQLVfLleaKRDXpKL430cepj3EJwgdFFiiMLtH
0paHk9kTx9+9EeRjg5PIre08LNG+4VhwJwUq53T9+lbw8Eepe6Z93RS4Pjdw
f3UExvf8rXY/+kwB/mIVR19DLp5ODdtxoE+Q/3tri+ijNdihhrttup8CHySY
rcKxNXjHjAbJfFigT+P70CUfqvGg67jq0p8UiB+7V154vAofCdNYXTFGgctR
4/nLJipxdc5xRacJCliK1DFehlbimL6aZU9/U0B6g3OnV3kFButQoZt/KbDj
vjw5fb4cJxqof/kmSYVdHhpThqZsfHC1RdYLDSp8c+h9U3EsB8f3k3gnNlKh
9fOSnLLj2bi/UOL9yCYqBOrwDwrZPMHeUC27jECFh/U6xdg2ExecUfc2p1Jh
VLfB563gPF7CGD/as5sKR22r92kXRuIGg/tCo5ZUuGxyZNvzk+FouYzzal8r
KrhYN8umx0Sik517tWVtqLCjLOuizNVoNHXu93maHRWiv2ismSHFoY0Rtp2e
p6lQ42fTWXUzGQW80yxauESFf7+u/iguzkKt6aLPI92o8GrpptNHAp6gNRd6
+9SuUCGOuW1RpmU2Ys1HKRl4UqH904Tclskc9EV9NuCuNxU8PBvtzOUK0N6L
DSfkQqiwLjFSY6Sfgea6vhrVhVJh411Sh9TeEsTWl6Jdu0eFEF7k5JlHJWij
0hGJDxFUQDpXd+YaM5FUXTc7J44KNKZkfXs0C9WT/qWeiBfw13ykRf4TC/km
rA2TSaRCzvfp7w4ENpq46GjvkUyFRY1t1rLVbNSlNCoNmVRI0e28svVZKYoO
kJ2dyKLCDVnDkzYiZcjkJ60/K5sKX2Zi2lx2lyFu3bXKpflUePxQr293YRm6
Tk7M4hZQ4YKPyq65z2WImlgd6VZEhe8LihH//z8585KwU2eJgF9OdozVlXJ0
slv9aCiLCubvdc/7pJYjRUOj3btLqdDc9z7C83k5ai123jxWRgXx55VL9cbL
Uahy2IoMDhXeOtgp9ipwkEFg4bxFpQBfQ67SgZ0c9O9ny1eJaiq0+Y9k3z7B
QZefyfMuYio4+YZkWT7kIE2KTr5aLRWK2j02jZdwUF+idVwHnwoRui42Fi84
KEnM+3ZwHRX+0u5U+Qv6GcvLKRd21lNh81v5qeuTHCT7nnf8RwMVnvup9uuI
V6Dnhn16ac+pIJO4MRKvrED+DDGSeRMV+La36bLqFUh39WYl8WYqLJsP26ZJ
qkBTgcaiFa8EfNmGEmR0KlDx2IWf51upsNPwdlf17grkfCKiW7WdCnId0lo6
ehVofX3Js7bXgvxb2LHvlkEF6qF0MALeUIFufcg9RmDHPpp6pNNJhR7Zxxuv
C+YfElcK/tZFhY9GDpIkQX8m4bbLPbmbCr1pZ0fKBPvx39vZHe6hwotSSos8
uQLdNPLbv6iXCvmm0R8PaFSgrSXp9LKPVGDLuF2zUqxAo6ufqZ77TIUSivca
fYkKlBM0JLmmT7Df+X5fqWkOsh+X/P2qnwpS7nK3yvs4SNmW+On2IBWsvx5T
3feKgzrqDzVtHRboN5cYzS3joPtUt7Khr1S46LVKRy2Zg/YlxTxO/E4FBn8q
yl3QLwotLrt38IeAT/q/o2WnOajSreua0E8qqJzQNx/T56ArPXMOrDEqfDJW
j9NYz0HEfSqHzk5QwY1Xtf/4fDlKXeOg8fI3Fc59b7vxnFGOdtIJJIdpKhB6
E3MGQ8pRx4FJnZkZAV7HTe/M7cuRxLUgE42/VLAw7XQiLS1Hl9vy3L1FaKAk
fDjhhEkZWjJ8xXu5KA1st1mfuaRYhjLndYNyxGggvjrfcepzKeoitCR0SNDA
TkYl3c29FEHQLx5xGQ0+SkvqFdxmo+6k6hd8WRqceBy8cngvG3mwAjusltNg
LlroD0+IjXI+KQ4HrKSBz+Lvlae8WEhul+6yD6tp4BTgeuCvHRN9+RlgF76Z
BsKh1UGKXcXIW/yQk7omDfwXXtt8ohYjBRVFtwoCDe4EZ3oUhBQhY+PcgAES
DeK+yXwKpBciZmZz/u5tAn/nbis3uuWhO9YKcz/20uDtl36RnVmZSONpdtyh
EzR44ltNv5MRiV4RZzJ7bGkQIKN8fivtProet5/lcpIGM3L6jaIqYajp3NeW
IHsaxDNUXG5OBCB3WYIkdqKB7jhafN/IDWG7optkDxrIehwasvvPFzs3zIfU
XKWBTPvRAZ8if7ycahZvco0GCUK/GmdyA/FZ0TG2kxcNeG9am5fGhWGpfOpo
qh8NJqUz4+kpMdhmhn1KNpwGaZdr67wbU7Cog9illPs0GJw62r5YNg0XNVn4
ECNp8K5Ls0+1Mg0Lp04l7I+hQb8wR0xEMh3nGG5/7ZdAg4V5/qROZCY+Wnz3
s8wjGnygRBpLamXhP6ve/UxKokFN0vGnTxuy8KGRG1IVqTTQurfyct3UE/w7
uspwPIsGmxft3Vu8Ixen/F16zDebBqrfN+26U5eL95+1dZDOpcFFz67hftM8
nLTj360tBYJ4L4kXbbTMx3qf9nDsmTSYP9uX63+gEI8ciKj/yRLody176DEu
xHGsjx0+pQK86iqL52lF+GuQ33gChwbGkVUL++SKcaQWX7OdSwO8Zc4n1oKB
c7afkPTn0WAic0X9ihAGxvqTQ1Q+DXaJ2/5trGTgUeuNWVHPaGC19mtd3aoS
LHYG39nbQIOde1zmhQ1L8JrLVg7jjTTIynS/evpSCTYJCl175CUNpPUqV/hz
S7BDlPq80Csa1D3zUtLpK8FeSdU9jBYa5B8uUxYSZ+KobIuqU200GND2O/du
IxPnMEcTZF/TQOr8BR9syMS8muDrvA4aKPutmC5yYOLOxnXHL7+lwaYTyWmZ
Pkw8+rpi27ougX9HpYvJcUws/vGofOs7Gug7t/vEFTKxyrfvE77vaeC9PGVV
OJ+Jt/4OaCN/oEGQ6GbmrTdMbCqkyvjYS4Mrrtu/Og8y8eml5fcjPtHgsdpU
8IHfTOylcNgVfaHB1w0aAaoiLByt9tXkZx8Nbj+xWRiQYuFcor9m6gANpo/u
2peykoV5OqslzYZo4PJs4I3hGhbu0mMPzQ8L9B4RPfp+HQv/PHiwvugbDSy+
9ty1U2dhcevBzJMjNOja3nGlSWCrOvrekRmlAYlXs0NjPQtvu7TKgftTwCdX
iOykysKmXiVwcZwGG8lVb2JWsbBjoPFa1V+CfM3u/ZAry8I3I/v+NU/SQD19
34ZccUG8j7x7fKYE+u5tKY+aY+K8JyurtGZokBpzvOX0CBPXlhQlfJgVjB9o
f722h4m7qvddD/9Dg7MieifqnzPxWMMny93/aLBXqWyLVSkTL359Y9uPeQGe
S6uob1OYWLV3uXyyEB0ujZ2/uzeIibW/5k+YitBhLvPU9UfnmfjgpEHb30V0
WKt603vgEBM7LnwoLhCjQ9y1st1qFCaOWSnrKiVJhxQPqVtXR0pw3rpck+ol
dBh4v5sa3VCC+QQ9zQtSdFiucU4yN60Ej+31GGpaRgeqeJpPi2kJljgoXX9T
jg6qfmtY/WtL8FqrJ5mEFXQo6k/avzDGwIcudtmHKdAhcLCo80g4A5+54Qa7
VgniHXZ+FWnFwN4BS9Z+V6LDZjxO7lNj4PxE3R5jFTrYhVmZZ9oVY37Wm8o5
VTpUCifbjfYX4W7GxYS8dXSQUMr76edchCUa0iyXaNDBXJejneVYiM/+Em17
rkmHpjF12iJaPj6ZZ/DKlkiH7eYy+rwnedjSPqDppxYdrCpPTNxdlYeNWhbV
r6TSIf3ijIjjrxy8MV+kyl6HDmVnen7aBT/BAw5CWbP6dFAYfr9DivYY9yhB
+j1DOhj47bUO807DHa2+qWv30SH+7iWl+JBUXLdnIcHQmA40Xl53eHISzlSe
vx91mA4XA5YfQw/isGP7n+tb7Ohw2TFX7EH+HWwbssuz+iQdNDoMr5qc8sPH
4OYVs1N0SLP702251gsbFM25Xj1Nh0+/E5oifM5hjdBZh9pzdFg3MBfb3nUB
9e2dNrX2pEPAZy9xlk8UciiZWBcSQQeGx8A3Jv8JuuBv/tc4ig6W0QvntlRk
o6vm7E6pGDp0Pv5uF1+Ug+7+vno/Mo4Obou2k//F5qGiHbN/HibT4e3PGUQ/
VoRmaxfePsmnw/WuHYnh1UwkEnOK6VxIh8jcg3/fbWEhKcfacM1iwTjVN/9L
LAupit8xKGLSge6+8tqfc2xkYCzOLK2gw9d7O6OXC5ehQ6udwq9V0WHlg7FT
EqfL0PGRBucdNXQ45zTj4fC0DLncD1lbw6OD7dtjKUq+5SiyXSq8roEOfrPn
X1z7zEGJGa7OQc/pUC1/NdB9WwXK8Hilv7+JDns6097dDq5AZQqRc02v6PDU
Tv1CxYZKxBsaexPeSofDOZcKW9wq0XPOkRKzdjrcPdkc8raqEvXYrHB+/YYO
L1eDyoMDVWiQ4KEf2ynQi1wAO8Or0M+/HarH39GhJ9ZjuPhVFRJJjXvT3UOH
wccZX74ZV6Oll6cZSb10GNNQpD0OrEbye63unfxEh7PGKcsludVoU5+S/pc+
OrTa5Q20bapBFLaXauYAHfRl1e9ssK5BOwPfz54ZogPUicjL3q1B+pa6bzZ9
FdRvgkJwGLsGmW5KZnz9RgfPAO2ZqN4aZDnzLyx/hA6ry1VLVcS56L/nJ51c
R+nQMfff4S0ELnI/v051fJwOGeWvePmuXOSte3uW+YsOTi9XdKwK46JA6S8d
Hr/p4NHmaj+RxUX3e/UY2tOCeK2c9m/lclF8cUbYzAwdQmMjg7pfc1G6n6hT
5RwdTl730/s8yEX5R87oef+lg8WPLcKG01zEXl+vsmeeDqcky2+LiGHE/bVx
dmGBDklWR6oUZDH6H+dXhqM=
       "]]},
     Annotation[#, "Charting`Private`Tag$4363#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-0.14381616642829212`, 0.13625854407208382`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.810533356334795*^9, {3.810538101294372*^9, 3.810538105332163*^9}, 
   3.810538477512376*^9, {3.810538739900014*^9, 3.8105387739448223`*^9}, 
   3.814064228623644*^9, 3.814064969471076*^9, 3.814066698091796*^9, 
   3.8140667433010807`*^9, 3.814531536984082*^9, 3.814531770749243*^9}]
}, Open  ]]
},
WindowSize->{974, 922},
WindowMargins->{{Automatic, 29}, {0, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 339, 7, 33, "Input"],
Cell[CellGroupData[{
Cell[922, 31, 3541, 94, 386, "Input",
 InitializationCell->True],
Cell[4466, 127, 3005, 77, 80, "Output"]
}, Open  ]],
Cell[7486, 207, 167, 3, 33, "Input"],
Cell[7656, 212, 6629, 194, 552, "Input",
 InitializationCell->True],
Cell[14288, 408, 161, 3, 33, "Input"],
Cell[14452, 413, 1057, 32, 93, "Input",
 InitializationCell->True],
Cell[15512, 447, 163, 3, 33, "Input"],
Cell[15678, 452, 1656, 45, 146, "Input",
 InitializationCell->True],
Cell[17337, 499, 163, 3, 33, "Input"],
Cell[CellGroupData[{
Cell[17525, 506, 7831, 211, 523, "Input",
 InitializationCell->True],
Cell[25359, 719, 909, 14, 35, "Output"]
}, Open  ]],
Cell[26283, 736, 259, 6, 35, "Input"],
Cell[26545, 744, 8767, 249, 769, "Input",
 InitializationCell->True],
Cell[35315, 995, 165, 3, 33, "Input"],
Cell[35483, 1000, 11571, 232, 722, "Input",
 InitializationCell->True],
Cell[47057, 1234, 157, 3, 33, "Input"],
Cell[47217, 1239, 1390, 26, 192, "Input",
 InitializationCell->True],
Cell[48610, 1267, 162, 3, 33, "Input"],
Cell[48775, 1272, 443, 12, 176, "Input"],
Cell[CellGroupData[{
Cell[49243, 1288, 3400, 65, 99, "Input",
 InitializationCell->True],
Cell[52646, 1355, 46790, 886, 207, "Output"]
}, Open  ]],
Cell[99451, 2244, 2736, 63, 194, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[102212, 2311, 1359, 24, 35, "Input"],
Cell[103574, 2337, 69367, 1153, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172978, 3495, 806, 16, 35, "Input"],
Cell[173787, 3513, 34298, 576, 227, "Output"]
}, Open  ]]
}
]
*)

